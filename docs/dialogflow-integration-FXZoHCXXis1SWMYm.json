{"createdAt":"2024-11-26T04:18:48.948Z","updatedAt":"2024-12-18T05:12:20.054Z","id":"FXZoHCXXis1SWMYm","name":"Dialogflow Integration","active":false,"nodes":[{"parameters":{"functionCode":"try {\n    // Verificar si los parámetros son válidos\n    const parameters = $input.all()[0].json.body.queryResult.parameters;\n\n    if (!parameters || typeof parameters !== \"object\") {\n        console.error(\"Error: Parámetros inválidos:\", parameters);\n        return [\n            {\n                json: {\n                    fulfillmentMessages: [\n                        {\n                            text: {\n                                text: [\"Error: Parámetros inválidos enviados.\"]\n                            }\n                        }\n                    ]\n                }\n            }\n        ];\n    }\n\n    // Validar los valores de entrada\n    const nominal = parseFloat(parameters.montoNominal);\n    const liquido = parseFloat(parameters.montoLiquido);\n\n    if (isNaN(nominal) || isNaN(liquido)) {\n        console.error(\"Error: Los valores no son números válidos:\", { nominal, liquido });\n        return [\n            {\n                json: {\n                    fulfillmentMessages: [\n                        {\n                            text: {\n                                text: [\"Error: Los valores enviados no son válidos. Por favor ingresa números.\"]\n                            }\n                        }\n                    ]\n                }\n            }\n        ];\n    }\n\n    // Realizar el cálculo (sin uso de `.every()`)\n    function calculoMargenUY(nominal, liquido) {\n        const minimoLegalUY = nominal * 0.35;\n        const diferencia = liquido - minimoLegalUY;\n        const margenMinimo = 3000;\n        return {\n            tieneMargen: diferencia > margenMinimo,\n            margenDisponible: diferencia\n        };\n    }\n\n    const resultado = calculoMargenUY(nominal, liquido);\n\n  // Preparar el mensaje de respuesta según el resultado\n        let mensajeRespuesta;\n        if (resultado.tieneMargen) {\n            mensajeRespuesta = `Está en condiciones de solicitar un crédito. Por favor, envíenos fotos nítidas y legibles de la siguiente documentación:\\n\\n- Cédula de identidad vigente\\n- Últimos dos recibos de sueldo o pasividad\\n- Constancia de domicilio (puede ser un recibo de UTE, OSE, ANTEL, estado de cuenta, etc.)`;\n        } else {\n            mensajeRespuesta = `Lo sentimos, en este momento no tiene el margen de retención necesario para solicitar un crédito. Le sugerimos que nos consulte cuando sus ingresos aumenten.`;\n        }\n\n    return [\n        {\n            json: {\n                fulfillmentMessages: [\n                    {\n                        text: {\n                            text: [mensajeRespuesta]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n\n} catch (error) {\n    console.error(\"Error no controlado:\", error);\n    return [\n        {\n            json: {\n                fulfillmentMessages: [\n                    {\n                        text: {\n                            text: [\"Hubo un error al procesar tu solicitud. Por favor intenta nuevamente.\"]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n}\n"},"name":"Code","type":"n8n-nodes-base.function","typeVersion":1,"position":[660,440],"id":"afa7660f-ad65-4926-a747-58aee696690e"},{"parameters":{"httpMethod":"POST","path":"dialogflow-optimized","responseMode":"lastNode","options":{}},"name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[400,440],"id":"4bc7bbba-e609-4734-b135-d550421035eb","webhookId":"0065c875-2a9a-448c-8c6c-c5975fd75dee"}],"connections":{"Webhook":{"main":[[{"node":"Code","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"7c4f5c9a-d0a9-43cf-9a7d-3b2f9079ee74","triggerCount":1,"tags":[{"createdAt":"2024-11-27T05:11:34.741Z","updatedAt":"2024-11-27T05:11:34.741Z","id":"lkTQ85NNYkbxB1mk","name":"Prod"}]}
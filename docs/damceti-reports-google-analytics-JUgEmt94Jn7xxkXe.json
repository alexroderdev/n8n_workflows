{"createdAt":"2025-02-09T19:29:24.393Z","updatedAt":"2025-02-23T16:50:38.862Z","id":"JUgEmt94Jn7xxkXe","name":"Damceti Reports Google Analytics","active":true,"nodes":[{"parameters":{},"id":"a408782f-80e9-4e9c-b7f7-07e591787d0e","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-80,340]},{"parameters":{"content":"# Property ID Bussines avaliable in Google Analytics \n\n## 1. Create your [Google Analytics Credentials](https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/?utm_source=n8n_app&utm_medium=credential_settings&utm_campaign=create_new_credentials_modal)\n## 2. Enter your [property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id) or Choose from the List of Properties.","height":866,"width":2510,"color":4},"id":"a144a841-7f46-4f6e-9278-1c3d1bd517cc","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[120,100],"typeVersion":1},{"parameters":{"jsCode":"// Helper function to decode and parse a URL-encoded JSON string\nfunction decodeUrlString(urlString) {\n    try {\n        const decoded = JSON.parse(decodeURIComponent(urlString));\n        console.log('Decoded URL string:', JSON.stringify(decoded, null, 2));\n        return decoded;\n    } catch (error) {\n        console.log('Error decoding URL string:', error.message);\n        return [];\n    }\n}\n\n// Main function to aggregate data\nfunction aggregateData(items) {\n    // Extract each urlString from the input\n    const data = items[0]?.json; // Get the first JSON object from input\n\n    if (!data) {\n        console.log('No data found in input items.');\n        return {};\n    }\n\n    // Decode each urlString\n    const engagementStatsThisWeek = decodeUrlString(data.urlString1 || '');\n    const engagementStatsPriorWeek = decodeUrlString(data.urlString2 || '');\n    const searchResultsThisWeek = decodeUrlString(data.urlString3 || '');\n    const searchResultsLastWeek = decodeUrlString(data.urlString4 || '');\n    const countryViewsThisWeek = decodeUrlString(data.urlString5 || '');\n    const countryViewsLastWeek = decodeUrlString(data.urlString6 || '');\n\n    // Aggregate the decoded data into a structured object\n    const aggregatedData = {\n        engagementStats: {\n            thisMonth: engagementStatsThisWeek,\n            priorMonth: engagementStatsPriorWeek,\n        },\n        searchResults: {\n            thisMonth: searchResultsThisWeek,\n            lastMonth: searchResultsLastWeek,\n        },\n        countryViews: {\n            thisMonth: countryViewsThisWeek,\n            lastMonth: countryViewsLastWeek,\n        },\n    };\n\n    console.log('Final Aggregated Data:', JSON.stringify(aggregatedData, null, 2));\n    return aggregatedData;\n}\n\n// Get input data from all nodes\nconst items = $input.all();\nconsole.log('Input items to Aggregate Data:', JSON.stringify(items, null, 2));\n\n// Perform aggregation\nconst aggregatedResult = aggregateData(items);\n\n// Output the aggregated result for downstream processing\nreturn { json: aggregatedResult };\n"},"id":"70fdbed7-5195-494a-8fd8-e95c689b8ffb","name":"Aggregate Data","type":"n8n-nodes-base.code","typeVersion":2,"position":[380,520]},{"parameters":{"assignments":{"assignments":[{"id":"93efb02f-f2f2-4e52-aa7a-3ccd1fb171cc","name":"urlString1","value":"={{ $('Parse - Get Page Engagement Month').first().json.urlString }}","type":"string"},{"id":"5dea3377-0af2-48da-8666-5ee9452e25c5","name":"urlString2","value":"={{ $('Parse - Get Page Engagement Prior Month').first().json.urlString }}","type":"string"},{"id":"c6aa5d4d-d1e5-4493-96fd-60b2298ff6da","name":"urlString3","value":"={{ $('Parse - Get Google Search This Month').first().json.urlString }}","type":"string"},{"id":"711cb4fa-3e8c-4ad6-9b25-e2447d7492d1","name":"urlString4","value":"={{ $('Parse - Get Google Search Prior Month').first().json.urlString }}","type":"string"},{"id":"775bc64a-7986-48fb-a36d-4101158b83f0","name":"urlString5","value":"={{ $('Parse - Country Views This Month').first().json.urlString }}","type":"string"},{"id":"a6ae27a0-89b5-4a6f-8328-327750835c8d","name":"urlString6","value":"={{ $('Parse - Country Views Prior Month').first().json.urlString }}","type":"string"}]},"options":{}},"id":"ea85cd51-20b8-4338-a7cc-8302d3230224","name":"Set urlStrings","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[200,520]},{"parameters":{"jsCode":"const input = $input.first().json;\n\n// Configuración global mejorada\nconst config = {\n    colors: {\n        primary: '#0E8663',    // DAMCETI verde\n        secondary: '#2D0388',  // MODTECS morado\n        accent: '#00BCD4',     // Color complementario\n        text: '#333333',\n        lightBg: '#f8f9fa',\n        border: '#E5E7EB',\n        success: '#10B981',\n        warning: '#F59E0B',\n        danger: '#EF4444'\n    },\n    fonts: {\n        primary: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif',\n        sizes: {\n            title: '28px',\n            subtitle: '14px',\n            body: '13px',\n            small: '11px'\n        }\n    },\n    spacing: {\n        xs: '4px',\n        sm: '8px',\n        md: '16px',\n        lg: '24px',\n        xl: '32px'\n    },\n    borderRadius: {\n        sm: '4px',\n        md: '6px',\n        lg: '8px'\n    }\n};\n\n// Funciones de utilidad adicionales\nconst formatPercentage = (value, decimals = 1) => {\n    if (value === null || value === undefined) return 'N/A';\n    return `${value.toFixed(decimals)}%`;\n};\n\nconst formatTrend = (value) => {\n    if (value === null || value === undefined) return '';\n    const arrow = value > 0 ? '↑' : value < 0 ? '↓' : '→';\n    const color = value > 0 ? '#10B981' : value < 0 ? '#EF4444' : '#666666';\n    return `<span style=\"color: ${color};\">${arrow} ${Math.abs(value).toFixed(1)}%</span>`;\n};\n\n// Funciones de utilidad\nfunction formatNumber(num, options = {}) {\n    const defaults = {\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 0,\n        notation: 'standard'\n    };\n    return new Intl.NumberFormat('en-US', { ...defaults, ...options }).format(num);\n}\n\nfunction calculateChange(current, previous) {\n    if (!previous) return null;\n    return ((current - previous) / previous) * 100;\n}\n\nfunction getTrendIndicator(change) {\n    if (change === null) return '';\n    const color = change > 0 ? config.colors.success : \n                 change < 0 ? config.colors.danger : \n                 config.colors.text;\n    const arrow = change > 0 ? '▲' : change < 0 ? '▼' : '►';\n    return `<span style=\"color: ${color}; margin-left: 4px;\">\n        ${arrow} ${Math.abs(change).toFixed(1)}%\n    </span>`;\n}\n\n// Función para generar tablas\nfunction generateTable(headers, rows, color) {\n    const tableStyle = `\n        width: 100%;\n        border-collapse: separate;\n        border-spacing: 0;\n        margin-bottom: ${config.spacing.lg};\n        border: 1px solid ${config.colors.border};\n        border-radius: ${config.borderRadius.md};\n        overflow: hidden;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n    `;\n    \n    const headerCellStyle = `\n        padding: ${config.spacing.sm} ${config.spacing.md};\n        text-align: left;\n        background-color: ${color};\n        color: white;\n        font-size: ${config.fonts.sizes.body};\n        font-weight: 600;\n        white-space: nowrap;\n    `;\n    \n    const cellStyle = `\n        padding: ${config.spacing.sm} ${config.spacing.md};\n        border-top: 1px solid ${config.colors.border};\n        font-size: ${config.fonts.sizes.body};\n        background-color: white;\n    `;\n    \n    let table = `<div style=\"overflow-x: auto;\"><table style=\"${tableStyle}\"><thead>`;\n    \n    table += `<tr>`;\n    headers.forEach(header => {\n        table += `<th style=\"${headerCellStyle}\">${header}</th>`;\n    });\n    table += `</tr></thead><tbody>`;\n    \n    rows.forEach((row, rowIndex) => {\n        table += `<tr style=\"background-color: ${rowIndex % 2 === 0 ? 'white' : config.colors.lightBg}\">`;\n        row.forEach((cell, cellIndex) => {\n            const isNumeric = !isNaN(cell.toString().replace('%', ''));\n            table += `<td style=\"${cellStyle}; ${isNumeric ? 'text-align: right;' : ''}\">${cell}</td>`;\n        });\n        table += `</tr>`;\n    });\n    \n    table += `</tbody></table></div>`;\n    return table;\n}\n\n// Función para obtener las fechas\nconst getReportDates = () => {\n    const today = new Date();\n    const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1);\n    \n    // Obtener el primer día del mes anterior\n    const firstDay = new Date(lastMonth.getFullYear(), lastMonth.getMonth(), 1);\n    \n    // Obtener el último día del mes anterior\n    const lastDay = new Date(lastMonth.getFullYear(), lastMonth.getMonth() + 1, 0);\n    \n    // Formatear el mes y año\n    const monthYear = lastMonth.toLocaleString('en-US', { \n        month: 'long', \n        year: 'numeric'\n    });\n    \n    // Formatear el primer día\n    const formattedFirstDay = firstDay.toLocaleString('en-US', {\n        day: '2-digit',\n        month: 'short'\n    });\n    \n    // Formatear el último día\n    const formattedLastDay = lastDay.toLocaleString('en-US', {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric'\n    });\n    \n    // Formatear la fecha y hora actual\n    const hours = today.getHours();\n    const minutes = today.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 || 12; // Convierte 0 a 12 para formato 12 horas\n    const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    \n    const generatedDate = `${today.toLocaleString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    })} at ${formattedHours}:${formattedMinutes} ${ampm}`;\n\n    return {\n        monthYear,\n        fullPeriod: `${formattedFirstDay} - ${formattedLastDay}`,\n        generatedDate\n    };\n};\n\n// Función para procesar los datos de entrada\nfunction processInputData(input) {\n    const engagementStats = input.engagementStats || {};\n    const searchResults = input.searchResults || {};\n    const countryViews = input.countryViews || {};\n\n    // Calcular métricas agregadas\n    const thisMonthMetrics = {\n        totalPageViews: engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.pageViews, 0) || 0,\n        totalActiveUsers: engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.activeUsers, 0) || 0,\n        totalEvents: engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.eventCount, 0) || 0,\n        avgEngagementRate: searchResults.thisMonth?.reduce((sum, result) => sum + result.engagementRate, 0) / \n            (searchResults.thisMonth?.length || 1) || 0,\n        totalNewUsers: countryViews.thisMonth?.reduce((sum, view) => sum + view.newUsers, 0) || 0,\n        avgSessionsPerUser: countryViews.thisMonth?.reduce((sum, view) => sum + view.sessions, 0) / \n            countryViews.thisMonth?.reduce((sum, view) => sum + view.activeUsers, 0) || 0\n    };\n\n    // Calcular métricas del mes anterior\n    const lastMonthMetrics = {\n        totalPageViews: engagementStats.lastMonth?.reduce((sum, stat) => sum + stat.pageViews, 0) || 0,\n        totalActiveUsers: engagementStats.lastMonth?.reduce((sum, stat) => sum + stat.activeUsers, 0) || 0,\n        totalEvents: engagementStats.lastMonth?.reduce((sum, stat) => sum + stat.eventCount, 0) || 0,\n        avgEngagementRate: searchResults.lastMonth?.reduce((sum, result) => sum + result.engagementRate, 0) / \n            (searchResults.lastMonth?.length || 1) || 0\n    };\n\n    // Calcular cambios porcentuales\n    const changes = {\n        pageViews: calculateChange(thisMonthMetrics.totalPageViews, lastMonthMetrics.totalPageViews),\n        activeUsers: calculateChange(thisMonthMetrics.totalActiveUsers, lastMonthMetrics.totalActiveUsers),\n        events: calculateChange(thisMonthMetrics.totalEvents, lastMonthMetrics.totalEvents),\n        engagementRate: calculateChange(thisMonthMetrics.avgEngagementRate, lastMonthMetrics.avgEngagementRate)\n    };\n\n    return {\n        engagementStats,\n        searchResults,\n        countryViews,\n        metrics: thisMonthMetrics,\n        changes\n    };\n}\n\nconst generateEmailTemplate = (data, dates) => {\n    const { metrics, changes, engagementStats, searchResults, countryViews } = data;\n    \n    const htmlContent = `\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; box-shadow: 0 2px 4px rgba(0,0,0,0.05);\">\n        <!-- Header -->\n        <tr>\n            <td align=\"center\" style=\"padding: 24px 0; background-color: #ffffff;\">\n                <h1 style=\"color: #0E8663; font-size: 32px; margin: 0; font-weight: 600;\">DAMCETI</h1>\n                <p style=\"color: #2D0388; font-size: 16px; margin: 8px 0;\">by MODTECS</p>\n                <div style=\"width: 200px; height: 3px; background: #0E8663; margin: 20px auto;\"></div>\n                <h2 style=\"color: #333; font-size: 22px; margin: 12px 0;\">Analytics & Performance Report</h2>\n                <div style=\"background: #2D0388; color: white; padding: 10px 24px; border-radius: 24px; display: inline-block; margin: 12px 0; font-size: 14px; font-weight: 500;\">\n                    ${dates.monthYear}\n                </div>\n            </td>\n        </tr>\n\n        <!-- Period Info -->\n<tr>\n    <td style=\"padding: 8px 16px;\">\n        <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f8f9fa; border: 1px solid #ddd; border-radius: 8px;\">\n            <tr>\n                <td style=\"padding: 12px 16px;\">\n                    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n                        <tr>\n                            <td>\n                                <span style=\"background-color: #0E8663; color: white; padding: 4px 12px; border-radius: 16px; font-size: 12px; display: inline-block; margin-right: 8px;\">\n                                    Coverage Period\n                                </span>\n                                <span style=\"font-size: 13px; color: #444;\">\n                                    ${dates.fullPeriod}\n                                </span>\n                            </td>\n                            <td align=\"right\">\n                                <span style=\"background-color: #0E8663; color: white; padding: 4px 12px; border-radius: 16px; font-size: 12px; display: inline-block; margin-right: 8px;\">\n                                    Generated\n                                </span>\n                                <span style=\"font-size: 13px; color: #444;\">\n                                    ${dates.generatedDate}\n                                </span>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n\n<!-- Report Introduction -->\n<tr>\n    <td style=\"padding: 8px 16px;\">\n        <div style=\"background-color: #f8f9fa; border: 1px solid #ddd; border-radius: 8px; padding: 12px 16px;\">\n            <p style=\"margin: 0; color: #444; font-size: 13px; line-height: 1.5;\">\n                Este reporte mensual presenta el rendimiento digital de DAMCETI Travel Agency, incluyendo \n                las interacciones de usuarios con nuestros paquetes turísticos, búsquedas de destinos y \n                distribución geográfica de visitantes. El análisis corresponde al período de ${dates.fullPeriod}, \n                permitiendo optimizar nuestras ofertas y experiencia del cliente.\n            </p>\n        </div>\n    </td>\n</tr>\n\n<!-- Metrics Summary -->\n<tr>\n    <td style=\"padding: 8px 16px;\">\n        <table width=\"100%\" style=\"border: 1px solid #ddd; border-radius: 8px; overflow: hidden;\">\n            <tr>\n                <td width=\"33%\" align=\"center\" style=\"padding: 16px; border-right: 1px solid #eee;\">\n                    <div style=\"font-size: 32px; font-weight: bold; color: #2D0388;\">\n                        ${formatNumber(metrics.totalPageViews)}\n                    </div>\n                    <div style=\"color: #666; font-size: 12px; text-transform: uppercase;\">\n                        TOTAL PAGE VIEWS\n                    </div>\n                </td>\n                <td width=\"33%\" align=\"center\" style=\"padding: 16px; border-right: 1px solid #eee;\">\n                    <div style=\"font-size: 32px; font-weight: bold; color: #2D0388;\">\n                        ${formatNumber(metrics.totalActiveUsers)}\n                    </div>\n                    <div style=\"color: #666; font-size: 12px; text-transform: uppercase;\">\n                        ACTIVE USERS\n                    </div>\n                </td>\n                <td width=\"33%\" align=\"center\" style=\"padding: 16px;\">\n                    <div style=\"font-size: 32px; font-weight: bold; color: #2D0388;\">\n                        ${metrics.avgEngagementRate === 0 ? '0' : metrics.avgEngagementRate.toFixed(1)}%\n                    </div>\n                    <div style=\"color: #666; font-size: 12px; text-transform: uppercase;\">\n                        AVG. ENGAGEMENT RATE\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n\n        <!-- Tables Sections -->\n        <tr>\n            <td style=\"padding: 0 16px;\">\n                            <!-- Engagement Stats Table -->\n                <table width=\"100%\" style=\"border: 1px solid #ddd; margin-bottom: 24px; border-radius: 12px; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.05);\">\n                    <tr>\n                        <td colspan=\"5\" style=\"padding: 16px; background-color: #f8f9fa; border-bottom: 2px solid #0ECCA9;\">\n                            <h3 style=\"margin: 0; color: #0ECCA9; font-size: 16px; font-weight: 600;\">Engagement Stats</h3>\n                        </td>\n                    </tr>\n                    <tr style=\"background-color: #0ECCA9;\">\n                        <th align=\"left\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Page</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Page Views</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Active Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Views/User</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px;\">Events</th>\n                    </tr>\n                    ${engagementStats.thisMonth?.map((stat, index) => `\n                        <tr style=\"background-color: ${index % 2 === 0 ? '#ffffff' : '#f8f9fa'};\">\n                            <td style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${stat.page}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${formatNumber(stat.pageViews)}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${formatNumber(stat.activeUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${stat.viewsPerUser.toFixed(2)}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px;\">${formatNumber(stat.eventCount)}</td>\n                        </tr>\n                    `).join('')}\n                </table>\n\n                <!-- Search Results Table -->\n                <table width=\"100%\" style=\"border: 1px solid #ddd; margin-bottom: 24px; border-radius: 12px; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.05);\">\n                    <tr>\n                        <td colspan=\"6\" style=\"padding: 16px; background-color: #f8f9fa; border-bottom: 2px solid #2D0388;\">\n                            <h3 style=\"margin: 0; color: #2D0388; font-size: 16px; font-weight: 600;\">Search Results</h3>\n                        </td>\n                    </tr>\n                    <tr style=\"background-color: #2D0388;\">\n                        <th align=\"left\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Page</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Eng. Sessions</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Eng. Rate</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">CTR</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px;\">Clicks</th>\n                    </tr>\n                    ${searchResults.thisMonth?.map((result, index) => `\n                        <tr style=\"background-color: ${index % 2 === 0 ? '#ffffff' : '#f8f9fa'};\">\n                            <td style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${result.page}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${formatNumber(result.activeUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${formatNumber(result.engagedSessions)}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${result.engagementRate === 0 ? '0' : result.engagementRate.toFixed(1)}%</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${result.ctr === 0 ? '0' : result.ctr.toFixed(1)}%</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px;\">${formatNumber(result.clicks)}</td>\n                        </tr>\n                    `).join('')}\n                </table>\n\n                <!-- Country Views Table -->\n                <table width=\"100%\" style=\"border: 1px solid #ddd; margin-bottom: 24px; border-radius: 12px; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.05);\">\n                    <tr>\n                        <td colspan=\"5\" style=\"padding: 16px; background-color: #f8f9fa; border-bottom: 2px solid #00BCD4;\">\n                            <h3 style=\"margin: 0; color: #00BCD4; font-size: 16px; font-weight: 600;\">Country Views</h3>\n                        </td>\n                    </tr>\n                    <tr style=\"background-color: #00BCD4;\">\n                        <th align=\"left\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Country</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Active Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">New Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px; border-right: 1px solid rgba(255,255,255,0.1);\">Eng. Rate</th>\n                        <th align=\"right\" style=\"color: white; font-size: 13px; padding: 12px 16px;\">Sessions</th>\n                    </tr>\n                    ${countryViews.thisMonth?.map((view, index) => `\n                        <tr style=\"background-color: ${index % 2 === 0 ? '#ffffff' : '#f8f9fa'};\">\n                            <td style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${view.country}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${formatNumber(view.activeUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${formatNumber(view.newUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px; border-right: 1px solid #eee;\">${view.engagementRate === 0 ? '0' : view.engagementRate.toFixed(1)}%</td>\n                            <td align=\"right\" style=\"font-size: 13px; padding: 12px 16px;\">${formatNumber(view.sessions)}</td>\n                        </tr>\n                    `).join('')}\n                </table>\n\n                <!-- Additional Summary Section -->\n                <table width=\"100%\" style=\"border: 1px solid #ddd; margin-bottom: 24px; border-radius: 12px; overflow: hidden; background-color: #f8f9fa;\">\n                    <tr>\n                        <td style=\"padding: 16px;\">\n                            <p style=\"margin: 0 0 12px 0; color: #444; font-size: 13px;\">\n                                <strong style=\"color: #2D0388; font-size: 16px;\">Monthly Overview</strong><br>\n                                This report covers the performance metrics for ${dates.monthYear}. Key highlights include:\n                            </p>\n                            <ul style=\"margin: 0; padding-left: 20px; color: #444; font-size: 13px;\">\n                                <li style=\"margin-bottom: 8px;\">Total page views: ${formatNumber(metrics.totalPageViews)} \n                                    ${changes.pageViews ? `<span style=\"color: ${changes.pageViews > 0 ? '#10B981' : '#EF4444'};\">(${changes.pageViews > 0 ? '+' : ''}${changes.pageViews.toFixed(1)}% vs last month)</span>` : ''}\n                                </li>\n                                <li style=\"margin-bottom: 8px;\">Active users: ${formatNumber(metrics.totalActiveUsers)}\n                                    ${changes.activeUsers ? `<span style=\"color: ${changes.activeUsers > 0 ? '#10B981' : '#EF4444'};\">(${changes.activeUsers > 0 ? '+' : ''}${changes.activeUsers.toFixed(1)}% vs last month)</span>` : ''}\n                                </li>\n                                <li>Average engagement rate: ${metrics.avgEngagementRate === 0 ? '0' : metrics.avgEngagementRate.toFixed(1)}%</li>\n                            </ul>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n\n        <!-- Signature -->\n        <tr>\n            <td style=\"padding: 24px 16px; border-top: 1px solid #ddd; text-align: right;\">\n                <p style=\"margin: 0; color: #666; font-size: 13px; line-height: 1.5;\">\n                    Prepared by:<br>\n                    <strong style=\"color: #2D0388; font-size: 14px;\">Alex Rodriguez</strong><br>\n                    <span style=\"color: #444;\">AI-Native Workflow Automation Architect</span><br>\n                    <span style=\"font-size: 11px; color: #888;\">Building Solutions to Optimize your Personal and Professional Life</span>\n                </p>\n            </td>\n        </tr>\n    </table>\n    `;\n    \n    return htmlContent;\n};\n\n// Función principal que procesa todo\nfunction generateReport(input) {\n    const dates = getReportDates();\n    const data = processInputData(input);\n    const htmlContent = generateEmailTemplate(data, dates);\n\n    return {\n        json: {\n            title: `DAMCETI Analytics Report - ${dates.monthYear}`,\n            htmlContent\n        }\n    };\n}\n\n// Ejecutar el generador\nreturn generateReport(input);"},"id":"6172c432-86ad-40ac-8118-933ecf0c0b82","name":"Format Data","type":"n8n-nodes-base.code","typeVersion":2,"position":[580,740]},{"parameters":{"jsCode":"console.log($input.all());\nreturn $input.all();\n"},"id":"f190d8c4-fc6a-431f-bc4b-04ea4e21e9aa","name":"Input All","type":"n8n-nodes-base.code","typeVersion":2,"position":[600,520]},{"parameters":{"content":"## Format the data and Email","height":316,"width":925,"color":5},"id":"3d49b447-558d-40ca-b3ed-4aa64cf0f14f","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1500,620]},{"parameters":{"sendTo":"auspitzezequiel@gmail.com","subject":"=Modtecs {{ $('Edit Fields').item.json.title }}","message":"={{ $('Edit Fields').item.json.htmlContent }}","options":{"appendAttribution":false,"attachmentsUi":{"attachmentsBinary":[{"property":"=data"}]},"senderName":"Modtecs Report Analytics"}},"id":"02c3e04d-8b3d-4c0b-bb6a-1e2eefa9d91d","name":"Email the Report","type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[2000,760],"webhookId":"80d4d964-449a-4599-b2de-bca9c8822bbd","credentials":{"gmailOAuth2":{"id":"TDGC962mg5h85KHo","name":"Gmail account"}}},{"parameters":{"rule":{"interval":[{"field":"months","triggerAtHour":8}]}},"id":"7441cdfe-1353-4211-a3d6-c6eeb2429309","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-80,520]},{"parameters":{"content":"# AlexRoder youchatbot.io\n\nI’m Alex Rodriguez, an AI-Native Workflow Automation Architect Building Solutions to Optimize your Personal and Professional Life.\n\n[Info](https://youchatbot.io)","height":566,"width":372,"color":6},"id":"fa063493-fd75-4801-81d7-43837cb3ba6b","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-280,100]},{"parameters":{"assignments":{"assignments":[{"id":"91bf87eb-f6ac-4777-bc2f-07fe7a63c5f5","name":"title","value":"={{ $json.title }}","type":"string"},{"id":"55f60398-66ef-4714-a72a-8a86e272b65c","name":"htmlContent","value":"={{ $json.htmlContent }}","type":"string"},{"id":"b68e306b-0566-48fe-b301-f2e61a0fa902","name":"id","value":"={{ $json.id }}","type":"string"}]},"options":{"ignoreConversionErrors":true}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1560,760],"id":"613be224-0bf6-455d-953e-dbfaa32f6b3f","name":"Edit Fields"},{"parameters":{"name":"=Damceti Report {{ $now }}","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"1JdkjEqGXFP64ZBO2pVEGwE4LF5dkLGWg","mode":"list","cachedResultName":"Reportes Google Analytics Damceti","cachedResultUrl":"https://drive.google.com/drive/folders/1JdkjEqGXFP64ZBO2pVEGwE4LF5dkLGWg"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1200,520],"id":"c077a1d4-cddd-47c6-b268-b5df6fa427db","name":"Google Drive","credentials":{"googleDriveOAuth2Api":{"id":"5LP9aPOCoDSbZsTa","name":"Google Drive account"}}},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1780,760],"id":"253d49d2-1b2c-47e2-9063-26c97da1d1a9","name":"Google Drive1","credentials":{"googleDriveOAuth2Api":{"id":"5LP9aPOCoDSbZsTa","name":"Google Drive account"}}},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[1180,760],"id":"d95f60a2-00d9-4b43-9df9-2597d6b812bf","name":"Merge"},{"parameters":{"jsCode":"const input = $input.first().json;\n\n// Extract data\nconst engagementStats = input.engagementStats || {};\nconst searchResults = input.searchResults || {};\nconst countryViews = input.countryViews || {};\n\n// Calculate summary metrics\nconst totalPageViews = engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.pageViews, 0) || 0;\nconst totalActiveUsers = engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.activeUsers, 0) || 0;\nconst averageEngagementRate = searchResults.thisMonth?.reduce((sum, result) => sum + result.engagementRate, 0) / (searchResults.thisMonth?.length || 1) || 0;\n\n// Helper function to format numbers\nfunction formatNumber(num) {\n    return new Intl.NumberFormat('en-US', { \n        maximumFractionDigits: 2,\n        minimumFractionDigits: 0\n    }).format(num);\n}\n\n// Helper function to generate HTML for a table\nfunction generateTable(headers, rows, color) {\n    let table = `<table style=\"width:100%; border-collapse:collapse; margin-bottom:15px;\">\n        <thead style=\"background-color:${color}; color:white;\">\n            <tr>`;\n    \n    headers.forEach(header => {\n        table += `<th style=\"padding:8px; text-align:left; border:1px solid ${color}; font-size:11px;\">${header}</th>`;\n    });\n    \n    table += `</tr></thead><tbody>`;\n    \n    rows.forEach(row => {\n        table += `<tr>`;\n        row.forEach(cell => {\n            table += `<td style=\"padding:6px; border:1px solid #ddd; font-size:11px;\">${cell}</td>`;\n        });\n        table += `</tr>`;\n    });\n    \n    table += `</tbody></table>`;\n    return table;\n}\n\nfunction getReportPeriod() {\n    const today = new Date();\n    const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1);\n    \n    // Obtener el primer y último día del mes anterior\n    const firstDay = new Date(lastMonth.getFullYear(), lastMonth.getMonth(), 1);\n    const lastDay = new Date(today.getFullYear(), today.getMonth(), 0);\n    \n    // Formatear las fechas con opciones más detalladas\n    const monthYear = lastMonth.toLocaleString('default', { \n        month: 'long', \n        year: 'numeric'\n    });\n    \n    const formattedFirstDay = firstDay.toLocaleString('default', {\n        day: '2-digit',\n        month: 'short'\n    });\n    \n    const formattedLastDay = lastDay.toLocaleString('default', {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric'\n    });\n    \n    const generatedDate = new Date().toLocaleString('default', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n    });\n\n    return {\n        monthYear,\n        fullPeriod: `${formattedFirstDay} - ${formattedLastDay}`,\n        generatedDate\n    };\n}\n\nconst reportDates = getReportPeriod();\n\n\nconst htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.4;\n            color: #333;\n            padding: 15px;\n            font-size: 12px;\n        }\n\n        .header-container {\n            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);\n            border-radius: 12px;\n            padding: 20px;\n            margin-bottom: 25px;\n            box-shadow: 0 2px 15px rgba(0,0,0,0.05);\n        }\n\n        .header {\n            text-align: center;\n            margin-bottom: 15px;\n        }\n\n        .header h1 {\n          color: #0E8663;  // Color verde de DAMCETI\n          font-size: 24px;\n          margin: 0 0 5px 0;\n          font-weight: 700;\n          letter-spacing: 1px;\n        }\n\n        .header .by-modtecs {\n    color: #2D0388;  // Color morado de MODTECS\n    font-size: 14px;\n    margin: 0;\n    font-weight: 500;\n}\n\n.divider {\n    width: 80px;\n    height: 3px;\n    background: linear-gradient(to right, #0E8663, #2D0388); // Gradiente de DAMCETI a MODTECS\n    margin: 8px auto;\n    border-radius: 2px;\n}\n\n        .period-badge {\n            background: linear-gradient(135deg, #2D0388 0%, #1a0255 100%);\n            color: white;\n            padding: 6px 20px;\n            border-radius: 20px;\n            display: inline-block;\n            margin: 10px 0;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: 0 2px 10px rgba(45,3,136,0.2);\n        }\n\n        .report-details {\n            background: rgba(45,3,136,0.03);\n            border-radius: 6px;\n            padding: 10px;\n            margin-top: 15px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            font-size: 11px;\n        }\n\n        .section {\n            margin-bottom: 15px;\n            background: white;\n            border-radius: 8px;\n            padding: 15px;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n        }\n\n        .section-title {\n            color: #2D0388;\n            padding-bottom: 3px;\n            border-bottom: 2px solid #2D0388;\n            margin-bottom: 10px;\n            font-size: 14px;\n            font-weight: 600;\n        }\n\n        .intro-text {\n            background-color: #f5f5f5;\n            padding: 10px;\n            border-radius: 6px;\n            margin-bottom: 15px;\n            font-size: 11px;\n            line-height: 1.5;\n        }\n\n        .highlights-grid {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: white;\n    padding: 15px;\n    border-radius: 8px;\n    margin: 15px 0;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n}\n\n.highlight-card {\n    flex: 1;\n    text-align: center;\n    padding: 0 20px;\n    position: relative;\n}\n\n.highlight-card:not(:last-child)::after {\n    content: \"\";\n    position: absolute;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    height: 70%;\n    width: 1px;\n    background: #eee;\n}\n\n.highlight-value {\n    font-size: 24px;\n    font-weight: bold;\n    color: #2D0388;\n    margin-bottom: 5px;\n}\n\n.highlight-label {\n    font-size: 11px;\n    color: #666;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n}\n\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-bottom: 15px;\n            font-size: 11px;\n        }\n\n        th {\n            padding: 8px;\n            text-align: left;\n            border: 1px solid;\n            color: white;\n            font-weight: 500;\n        }\n\n        td {\n            padding: 6px;\n            border: 1px solid #ddd;\n        }\n\n        tr:nth-child(even) {\n            background-color: rgba(245,245,245,0.5);\n        }\n\n        .signature {\n            margin-top: 20px;\n            text-align: right;\n            color: #666;\n            border-top: 1px solid #eee;\n            padding-top: 10px;\n            font-size: 11px;\n        }\n\n        .signature strong {\n            color: #2D0388;\n            font-size: 12px;\n        }\n\n        .icon {\n            width: 12px;\n            height: 12px;\n            display: inline-block;\n            vertical-align: middle;\n            margin-right: 4px;\n        }\n\n        @media print {\n            body { padding: 10px; }\n            .header-container, .section { box-shadow: none; }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"header-container\">\n    <div class=\"header\">\n        <h1>DAMCETI</h1>\n        <p class=\"by-modtecs\">by MODTECS</p>\n        <div class=\"divider\"></div>\n        <h2>Analytics & Performance Report</h2>\n        \n        <div class=\"period-badge\">\n            ${reportDates.monthYear}\n        </div>\n\n        <div class=\"report-details\">\n            <div class=\"report-period\">\n                <svg class=\"icon\" fill=\"#0E8663\" viewBox=\"0 0 24 24\">\n                    <path d=\"M19,4H17V3a1,1,0,0,0-2,0V4H9V3A1,1,0,0,0,7,3V4H5A3,3,0,0,0,2,7V19a3,3,0,0,0,3,3H19a3,3,0,0,0,3-3V7A3,3,0,0,0,19,4Z\"/>\n                </svg>\n                Coverage Period: ${reportDates.fullPeriod}\n            </div>\n            <div class=\"generated-info\">\n                <svg class=\"icon\" fill=\"#0E8663\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Z\"/>\n                </svg>\n                Generated: ${reportDates.generatedDate}\n            </div>\n        </div>\n    </div>\n</div>\n\n    <div class=\"intro-text\">\n    Este reporte mensual presenta el rendimiento digital de DAMCETI Travel Agency, incluyendo \n    las interacciones de usuarios con nuestros paquetes turísticos, búsquedas de destinos y \n    distribución geográfica de visitantes. El análisis corresponde al período de ${reportDates.fullPeriod}, \n    permitiendo optimizar nuestras ofertas y experiencia del cliente.\n</div>\n\n    <div class=\"section\">\n    <h2 class=\"section-title\">Monthly Highlights</h2>\n    <div class=\"highlights-grid\">\n        <div class=\"highlight-card\">\n            <div class=\"highlight-value\">${formatNumber(totalPageViews)}</div>\n            <div class=\"highlight-label\">Total Page Views</div>\n        </div>\n        <div class=\"highlight-card\">\n            <div class=\"highlight-value\">${formatNumber(totalActiveUsers)}</div>\n            <div class=\"highlight-label\">Active Users</div>\n        </div>\n        <div class=\"highlight-card\">\n            <div class=\"highlight-value\">${averageEngagementRate.toFixed(1)}%</div>\n            <div class=\"highlight-label\">Avg. Engagement Rate</div>\n        </div>\n    </div>\n</div>\n\n    <div class=\"section\">\n        <h2 class=\"section-title\" style=\"color: #0ECCA9; border-color: #0ECCA9;\">Engagement Stats</h2>\n        ${generateTable(\n            ['Page', 'Page Views', 'Active Users', 'Views/User', 'Events'],\n            engagementStats.thisMonth?.map(stat => [\n                stat.page,\n                formatNumber(stat.pageViews),\n                formatNumber(stat.activeUsers),\n                stat.viewsPerUser.toFixed(2),\n                formatNumber(stat.eventCount)\n            ]) || [],\n            '#0ECCA9'\n        )}\n    </div>\n\n    <div class=\"section\">\n        <h2 class=\"section-title\" style=\"color: #2D0388; border-color: #2D0388;\">Search Results</h2>\n        ${generateTable(\n            ['Page', 'Users', 'Eng. Sessions', 'Eng. Rate', 'CTR', 'Clicks'],\n            searchResults.thisMonth?.map(result => [\n                result.page,\n                formatNumber(result.activeUsers),\n                formatNumber(result.engagedSessions),\n                result.engagementRate.toFixed(1) + '%',\n                result.ctr.toFixed(1) + '%',\n                formatNumber(result.clicks)\n            ]) || [],\n            '#2D0388'\n        )}\n    </div>\n\n    <div class=\"section\">\n        <h2 class=\"section-title\" style=\"color: #00BCD4; border-color: #00BCD4;\">Country Views</h2>\n        ${generateTable(\n            ['Country', 'Active Users', 'New Users', 'Eng. Rate', 'Sessions'],\n            countryViews.thisMonth?.map(view => [\n                view.country,\n                formatNumber(view.activeUsers),\n                formatNumber(view.newUsers),\n                view.engagementRate.toFixed(1) + '%',\n                formatNumber(view.sessions)\n            ]) || [],\n            '#00BCD4'\n        )}\n    </div>\n\n    <div class=\"signature\">\n        Prepared by:<br>\n        <strong>Alex Rodriguez</strong><br>\n        AI-Native Workflow Automation Architect<br>\n        <span style=\"font-size: 10px; color: #888;\">Building Solutions to Optimize your Personal and Professional Life</span>\n    </div>\n</body>\n</html>`;\n\nconst data = {\n    test: false,\n    document_content: htmlContent,\n    type: \"pdf\",\n    javascript: true,\n    prince_options: {\n        media: \"screen\",\n        baseurl: \"https://modtecs.com\"\n    }\n};\n\nreturn JSON.parse(JSON.stringify(data));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[800,520],"id":"89dc7020-aa99-45e2-b870-7106965d0e5d","name":"Create pdf"},{"parameters":{"jsCode":"const input = $input.first().json;\n\n// Configuración global mejorada\nconst config = {\n    colors: {\n        primary: '#0E8663',    // DAMCETI verde\n        secondary: '#2D0388',  // MODTECS morado\n        accent: '#00BCD4',     // Color complementario\n        text: '#333333',\n        lightBg: '#f8f9fa',\n        border: '#E5E7EB',\n        success: '#10B981',\n        warning: '#F59E0B',\n        danger: '#EF4444'\n    },\n    fonts: {\n        primary: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif',\n        sizes: {\n            title: '28px',\n            subtitle: '14px',\n            body: '13px',\n            small: '11px'\n        }\n    },\n    spacing: {\n        xs: '4px',\n        sm: '8px',\n        md: '16px',\n        lg: '24px',\n        xl: '32px'\n    },\n    borderRadius: {\n        sm: '4px',\n        md: '6px',\n        lg: '8px'\n    }\n};\n\n// Funciones de utilidad adicionales\nconst formatPercentage = (value, decimals = 1) => {\n    if (value === null || value === undefined) return 'N/A';\n    return `${value.toFixed(decimals)}%`;\n};\n\nconst formatTrend = (value) => {\n    if (value === null || value === undefined) return '';\n    const arrow = value > 0 ? '↑' : value < 0 ? '↓' : '→';\n    const color = value > 0 ? '#10B981' : value < 0 ? '#EF4444' : '#666666';\n    return `<span style=\"color: ${color};\">${arrow} ${Math.abs(value).toFixed(1)}%</span>`;\n};\n\n// Funciones de utilidad\nfunction formatNumber(num, options = {}) {\n    const defaults = {\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 0,\n        notation: 'standard'\n    };\n    return new Intl.NumberFormat('en-US', { ...defaults, ...options }).format(num);\n}\n\nfunction calculateChange(current, previous) {\n    if (!previous) return null;\n    return ((current - previous) / previous) * 100;\n}\n\nfunction getTrendIndicator(change) {\n    if (change === null) return '';\n    const color = change > 0 ? config.colors.success : \n                 change < 0 ? config.colors.danger : \n                 config.colors.text;\n    const arrow = change > 0 ? '▲' : change < 0 ? '▼' : '►';\n    return `<span style=\"color: ${color}; margin-left: 4px;\">\n        ${arrow} ${Math.abs(change).toFixed(1)}%\n    </span>`;\n}\n\n// Función para generar tablas\nfunction generateTable(headers, rows, color) {\n    const tableStyle = `\n        width: 100%;\n        border-collapse: separate;\n        border-spacing: 0;\n        margin-bottom: ${config.spacing.lg};\n        border: 1px solid ${config.colors.border};\n        border-radius: ${config.borderRadius.md};\n        overflow: hidden;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n    `;\n    \n    const headerCellStyle = `\n        padding: ${config.spacing.sm} ${config.spacing.md};\n        text-align: left;\n        background-color: ${color};\n        color: white;\n        font-size: ${config.fonts.sizes.body};\n        font-weight: 600;\n        white-space: nowrap;\n    `;\n    \n    const cellStyle = `\n        padding: ${config.spacing.sm} ${config.spacing.md};\n        border-top: 1px solid ${config.colors.border};\n        font-size: ${config.fonts.sizes.body};\n        background-color: white;\n    `;\n    \n    let table = `<div style=\"overflow-x: auto;\"><table style=\"${tableStyle}\"><thead>`;\n    \n    table += `<tr>`;\n    headers.forEach(header => {\n        table += `<th style=\"${headerCellStyle}\">${header}</th>`;\n    });\n    table += `</tr></thead><tbody>`;\n    \n    rows.forEach((row, rowIndex) => {\n        table += `<tr style=\"background-color: ${rowIndex % 2 === 0 ? 'white' : config.colors.lightBg}\">`;\n        row.forEach((cell, cellIndex) => {\n            const isNumeric = !isNaN(cell.toString().replace('%', ''));\n            table += `<td style=\"${cellStyle}; ${isNumeric ? 'text-align: right;' : ''}\">${cell}</td>`;\n        });\n        table += `</tr>`;\n    });\n    \n    table += `</tbody></table></div>`;\n    return table;\n}\n\n// Función para obtener las fechas\nfunction getReportDates() {\n    const timeZone = 'America/New_York';\n    const today = new Date();\n    const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1);\n    \n    const firstDay = new Date(lastMonth.getFullYear(), lastMonth.getMonth(), 1);\n    const lastDay = new Date(today.getFullYear(), today.getMonth(), 0);\n    \n    return {\n        monthYear: lastMonth.toLocaleString('en-US', { \n            timeZone,\n            month: 'long', \n            year: 'numeric'\n        }),\n        fullPeriod: `${firstDay.toLocaleString('en-US', { \n            timeZone,\n            month: 'short',\n            day: '2-digit'\n        })} - ${lastDay.toLocaleString('en-US', { \n            timeZone,\n            month: 'short',\n            day: '2-digit',\n            year: 'numeric'\n        })}`,\n        generatedDate: new Date().toLocaleString('en-US', {\n            timeZone,\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true\n        })\n    };\n}\n\n// Función para procesar los datos de entrada\nfunction processInputData(input) {\n    const engagementStats = input.engagementStats || {};\n    const searchResults = input.searchResults || {};\n    const countryViews = input.countryViews || {};\n\n    // Calcular métricas agregadas\n    const thisMonthMetrics = {\n        totalPageViews: engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.pageViews, 0) || 0,\n        totalActiveUsers: engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.activeUsers, 0) || 0,\n        totalEvents: engagementStats.thisMonth?.reduce((sum, stat) => sum + stat.eventCount, 0) || 0,\n        avgEngagementRate: searchResults.thisMonth?.reduce((sum, result) => sum + result.engagementRate, 0) / \n            (searchResults.thisMonth?.length || 1) || 0,\n        totalNewUsers: countryViews.thisMonth?.reduce((sum, view) => sum + view.newUsers, 0) || 0,\n        avgSessionsPerUser: countryViews.thisMonth?.reduce((sum, view) => sum + view.sessions, 0) / \n            countryViews.thisMonth?.reduce((sum, view) => sum + view.activeUsers, 0) || 0\n    };\n\n    // Calcular métricas del mes anterior\n    const lastMonthMetrics = {\n        totalPageViews: engagementStats.lastMonth?.reduce((sum, stat) => sum + stat.pageViews, 0) || 0,\n        totalActiveUsers: engagementStats.lastMonth?.reduce((sum, stat) => sum + stat.activeUsers, 0) || 0,\n        totalEvents: engagementStats.lastMonth?.reduce((sum, stat) => sum + stat.eventCount, 0) || 0,\n        avgEngagementRate: searchResults.lastMonth?.reduce((sum, result) => sum + result.engagementRate, 0) / \n            (searchResults.lastMonth?.length || 1) || 0\n    };\n\n    // Calcular cambios porcentuales\n    const changes = {\n        pageViews: calculateChange(thisMonthMetrics.totalPageViews, lastMonthMetrics.totalPageViews),\n        activeUsers: calculateChange(thisMonthMetrics.totalActiveUsers, lastMonthMetrics.totalActiveUsers),\n        events: calculateChange(thisMonthMetrics.totalEvents, lastMonthMetrics.totalEvents),\n        engagementRate: calculateChange(thisMonthMetrics.avgEngagementRate, lastMonthMetrics.avgEngagementRate)\n    };\n\n    return {\n        engagementStats,\n        searchResults,\n        countryViews,\n        metrics: thisMonthMetrics,\n        changes\n    };\n}\n\nconst generateEmailTemplate = (data, dates) => {\n    const { metrics, changes, engagementStats, searchResults, countryViews } = data;\n    \n    const htmlContent = `\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <!-- Header -->\n        <tr>\n            <td align=\"center\" style=\"padding: 20px 0; background-color: #ffffff;\">\n                <h1 style=\"color: #0E8663; font-size: 28px; margin: 0;\">DAMCETI</h1>\n                <p style=\"color: #2D0388; font-size: 14px; margin: 5px 0;\">by MODTECS</p>\n                <div style=\"width: 200px; height: 3px; background: #0E8663; margin: 15px auto;\"></div>\n                <h2 style=\"color: #333; font-size: 20px; margin: 10px 0;\">Analytics & Performance Report</h2>\n                <div style=\"background: #2D0388; color: white; padding: 8px 20px; border-radius: 20px; display: inline-block; margin: 10px 0;\">\n                    ${dates.monthYear}\n                </div>\n            </td>\n        </tr>\n\n        <!-- Period Info -->\n        <tr>\n            <td style=\"padding: 10px; background-color: #f8f9fa; border: 1px solid #ddd;\">\n                <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n                    <tr>\n                        <td width=\"50%\">Coverage Period: ${dates.fullPeriod}</td>\n                        <td width=\"50%\" align=\"right\">Generated: ${dates.generatedDate}</td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n\n        <!-- Metrics Summary -->\n        <tr>\n            <td style=\"padding: 20px 0;\">\n                <table width=\"100%\" cellpadding=\"10\" cellspacing=\"0\" style=\"background-color: #ffffff; border: 1px solid #ddd;\">\n                    <tr>\n                        <td width=\"33%\" align=\"center\" style=\"border-right: 1px solid #ddd;\">\n                            <div style=\"font-size: 24px; font-weight: bold; color: #2D0388;\">\n                                ${formatNumber(metrics.totalPageViews)}\n                            </div>\n                            <div style=\"color: #666; font-size: 12px;\">TOTAL PAGE VIEWS</div>\n                        </td>\n                        <td width=\"33%\" align=\"center\" style=\"border-right: 1px solid #ddd;\">\n                            <div style=\"font-size: 24px; font-weight: bold; color: #2D0388;\">\n                                ${formatNumber(metrics.totalActiveUsers)}\n                            </div>\n                            <div style=\"color: #666; font-size: 12px;\">ACTIVE USERS</div>\n                        </td>\n                        <td width=\"33%\" align=\"center\">\n                            <div style=\"font-size: 24px; font-weight: bold; color: #2D0388;\">\n                                ${metrics.avgEngagementRate.toFixed(1)}%\n                            </div>\n                            <div style=\"color: #666; font-size: 12px;\">AVG. ENGAGEMENT RATE</div>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n\n        <!-- Tables Sections -->\n        <tr>\n            <td style=\"padding: 10px 0;\">\n                <!-- Engagement Stats Table -->\n                <table width=\"100%\" cellpadding=\"8\" cellspacing=\"0\" style=\"border: 1px solid #ddd; margin-bottom: 20px;\">\n                    <tr style=\"background-color: #0ECCA9;\">\n                        <th align=\"left\" style=\"color: white; font-size: 12px;\">Page</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px;\">Page Views</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px;\">Active Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px;\">Views/User</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px;\">Events</th>\n                    </tr>\n                    ${engagementStats.thisMonth?.map((stat, index) => `\n                        <tr style=\"background-color: ${index % 2 === 0 ? '#f8f9fa' : '#ffffff'};\">\n                            <td style=\"font-size: 12px;\">${stat.page}</td>\n                            <td align=\"right\" style=\"font-size: 12px;\">${formatNumber(stat.pageViews)}</td>\n                            <td align=\"right\" style=\"font-size: 12px;\">${formatNumber(stat.activeUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 12px;\">${stat.viewsPerUser.toFixed(2)}</td>\n                            <td align=\"right\" style=\"font-size: 12px;\">${formatNumber(stat.eventCount)}</td>\n                        </tr>\n                    `).join('')}\n                </table>\n\n                <!-- Search Results Table -->\n                <table width=\"100%\" cellpadding=\"8\" cellspacing=\"0\" style=\"border: 1px solid #ddd; margin-bottom: 20px;\">\n                    <tr>\n                        <td colspan=\"6\" style=\"padding: 10px; background-color: #f8f9fa; border-bottom: 2px solid #2D0388;\">\n                            <h3 style=\"margin: 0; color: #2D0388; font-size: 14px;\">Search Results</h3>\n                        </td>\n                    </tr>\n                    <tr style=\"background-color: #2D0388;\">\n                        <th align=\"left\" style=\"color: white; font-size: 12px; padding: 8px;\">Page</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">Eng. Sessions</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">Eng. Rate</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">CTR</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">Clicks</th>\n                    </tr>\n                    ${searchResults.thisMonth?.map((result, index) => `\n                        <tr style=\"background-color: ${index % 2 === 0 ? '#f8f9fa' : '#ffffff'};\">\n                            <td style=\"font-size: 12px; padding: 8px;\">${result.page}</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${formatNumber(result.activeUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${formatNumber(result.engagedSessions)}</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${result.engagementRate.toFixed(1)}%</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${result.ctr.toFixed(1)}%</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${formatNumber(result.clicks)}</td>\n                        </tr>\n                    `).join('')}\n                </table>\n\n                <!-- Country Views Table -->\n                <table width=\"100%\" cellpadding=\"8\" cellspacing=\"0\" style=\"border: 1px solid #ddd; margin-bottom: 20px;\">\n                    <tr>\n                        <td colspan=\"5\" style=\"padding: 10px; background-color: #f8f9fa; border-bottom: 2px solid #00BCD4;\">\n                            <h3 style=\"margin: 0; color: #00BCD4; font-size: 14px;\">Country Views</h3>\n                        </td>\n                    </tr>\n                    <tr style=\"background-color: #00BCD4;\">\n                        <th align=\"left\" style=\"color: white; font-size: 12px; padding: 8px;\">Country</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">Active Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">New Users</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">Eng. Rate</th>\n                        <th align=\"right\" style=\"color: white; font-size: 12px; padding: 8px;\">Sessions</th>\n                    </tr>\n                    ${countryViews.thisMonth?.map((view, index) => `\n                        <tr style=\"background-color: ${index % 2 === 0 ? '#f8f9fa' : '#ffffff'};\">\n                            <td style=\"font-size: 12px; padding: 8px;\">${view.country}</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${formatNumber(view.activeUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${formatNumber(view.newUsers)}</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${view.engagementRate.toFixed(1)}%</td>\n                            <td align=\"right\" style=\"font-size: 12px; padding: 8px;\">${formatNumber(view.sessions)}</td>\n                        </tr>\n                    `).join('')}\n                </table>\n\n                <!-- Additional Summary Section -->\n                <table width=\"100%\" cellpadding=\"10\" cellspacing=\"0\" style=\"background-color: #f8f9fa; border: 1px solid #ddd; margin-bottom: 20px;\">\n                    <tr>\n                        <td>\n                            <p style=\"margin: 0; color: #666; font-size: 12px;\">\n                                <strong style=\"color: #2D0388;\">Monthly Overview:</strong><br>\n                                This report covers the performance metrics for ${dates.monthYear}. Key highlights include:\n                            </p>\n                            <ul style=\"margin: 10px 0; padding-left: 20px; color: #666; font-size: 12px;\">\n                                <li>Total page views: ${formatNumber(metrics.totalPageViews)} \n                                    ${changes.pageViews ? `(${changes.pageViews > 0 ? '+' : ''}${changes.pageViews.toFixed(1)}% vs last month)` : ''}\n                                </li>\n                                <li>Active users: ${formatNumber(metrics.totalActiveUsers)}\n                                    ${changes.activeUsers ? `(${changes.activeUsers > 0 ? '+' : ''}${changes.activeUsers.toFixed(1)}% vs last month)` : ''}\n                                </li>\n                                <li>Average engagement rate: ${metrics.avgEngagementRate.toFixed(1)}%</li>\n                            </ul>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n\n        <!-- Signature -->\n        <tr>\n            <td style=\"padding: 20px 0; border-top: 1px solid #ddd; text-align: right;\">\n                <p style=\"margin: 0; color: #666; font-size: 12px;\">\n                    Prepared by:<br>\n                    <strong style=\"color: #2D0388;\">Alex Rodriguez</strong><br>\n                    AI-Native Workflow Automation Architect<br>\n                    <span style=\"font-size: 10px; color: #888;\">Building Solutions to Optimize your Personal and Professional Life</span>\n                </p>\n            </td>\n        </tr>\n    </table>\n    `;\n    \n    return htmlContent;\n};\n\n// Función principal que procesa todo\nfunction generateReport(input) {\n    const dates = getReportDates();\n    const data = processInputData(input);\n    const htmlContent = generateEmailTemplate(data, dates);\n\n    return {\n        json: {\n            title: `DAMCETI Analytics Report - ${dates.monthYear}`,\n            htmlContent\n        }\n    };\n}\n\n// Ejecutar el generador\nreturn generateReport(input);"},"id":"636120cd-03f0-48f0-84ab-cdecac495d63","name":"Version mejorada y estructurada","type":"n8n-nodes-base.code","typeVersion":2,"position":[540,1120]},{"parameters":{"jsCode":"const input = $input.first().json;\n\n// Extract data\nconst engagementStats = input.engagementStats || {};\nconst searchResults = input.searchResults || {};\nconst countryViews = input.countryViews || {};\n\n// Helper function to generate HTML for a table\nfunction generateTable(headers, rows, color) {\n    let table = `<table border=\"1\" style=\"border-collapse:collapse; width:100%; border:1px solid ${color}; box-shadow: 0 0 20px rgba(0,0,0,0.1); border-radius: 8px; overflow: hidden; margin-bottom: 20px;\">`;\n    // Add table headers\n    table += `<thead style=\"background-color:${color}; color:white;\"><tr>`;\n    headers.forEach(header => {\n        table += `<th style=\"padding:12px; text-align:left; border:1px solid ${color};\">${header}</th>`;\n    });\n    table += '</tr></thead>';\n    // Add table rows\n    table += '<tbody>';\n    rows.forEach(row => {\n        table += `<tr style=\"transition: background-color 0.3s;\">`;\n        row.forEach(cell => {\n            table += `<td style=\"padding:12px; border:1px solid ${color};\">${cell}</td>`;\n        });\n        table += '</tr>';\n    });\n    table += '</tbody></table>';\n    return table;\n}\n\n// Get today's date\nconst today = new Date();\nconst formattedDate = today.toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n});\n\n// Colors for each segment\nconst engagementColor = '#0ECCA9';  // Color principal de Modtecs\nconst searchColor = '#2D0388';      // Color secundario de Modtecs\nconst countryColor = '#00BCD4';     // Color brillante complementario\n\n// Generate HTML content\nconst title = `Report for ${formattedDate}`;\nlet htmlContent = `\n    <div style=\"text-align:center; margin-bottom: 30px;\">\n        <h1 style=\"color:#2D0388; font-size: 32px;\">DAMCETI by MODTECS</h1>\n        <div style=\"width: 100px; height: 4px; background: linear-gradient(to right, #0ECCA9, #2D0388); margin: 10px auto;\"></div>\n        <h2 style=\"color:#333;\">${title}</h2>\n    </div>\n\n    <div style=\"margin-bottom: 30px; padding: 20px; background-color: #f5f5f5; border-radius: 8px;\">\n        <p style=\"color: #333; line-height: 1.6;\">\n            Este reporte mensual proporciona una visión detallada de las métricas de engagement, \n            resultados de búsqueda y vistas por país de nuestra plataforma. Los datos se comparan \n            con el mes anterior para mostrar tendencias y patrones de comportamiento de usuarios.\n        </p>\n    </div>`;\n\n// Engagement Stats Section\nif (engagementStats.thisMonth?.length || engagementStats.lastMonth?.length) {\n    htmlContent += `<h2 style=\"color:${engagementColor}; padding-bottom: 5px; border-bottom: 2px solid ${engagementColor};\">Engagement Stats</h2>`;\n    \n    if (engagementStats.thisMonth?.length) {\n        htmlContent += `<h3 style=\"color:#333;\">This Month</h3>`;\n        const headers = ['Page', 'Page Views', 'Active Users', 'Views per User', 'Event Count'];\n        const rows = engagementStats.thisMonth.map(stat => [\n            stat.page,\n            stat.pageViews,\n            stat.activeUsers,\n            stat.viewsPerUser.toFixed(2),\n            stat.eventCount,\n        ]);\n        htmlContent += generateTable(headers, rows, engagementColor);\n    }\n\n    if (engagementStats.lastMonth?.length) {\n        htmlContent += `<h3 style=\"color:#333;\">Last Month</h3>`;\n        const headers = ['Page', 'Page Views', 'Active Users', 'Views per User', 'Event Count'];\n        const rows = engagementStats.lastMonth.map(stat => [\n            stat.page,\n            stat.pageViews,\n            stat.activeUsers,\n            stat.viewsPerUser.toFixed(2),\n            stat.eventCount,\n        ]);\n        htmlContent += generateTable(headers, rows, engagementColor);\n    }\n}\n\n// Search Results Section\nif (searchResults.thisMonth?.length || searchResults.lastMonth?.length) {\n    htmlContent += `<h2 style=\"color:${searchColor}; padding-bottom: 5px; border-bottom: 2px solid ${searchColor};\">Search Results</h2>`;\n    \n    if (searchResults.thisMonth?.length) {\n        htmlContent += `<h3 style=\"color:#333;\">This Month</h3>`;\n        const headers = ['Page', 'Active Users', 'Engaged Sessions', 'Engagement Rate', 'Event Count', 'Avg Position', 'CTR', 'Clicks', 'Impressions'];\n        const rows = searchResults.thisMonth.map(result => [\n            result.page,\n            result.activeUsers,\n            result.engagedSessions,\n            result.engagementRate.toFixed(2),\n            result.eventCount,\n            result.avgPosition.toFixed(2),\n            result.ctr.toFixed(2),\n            result.clicks,\n            result.impressions,\n        ]);\n        htmlContent += generateTable(headers, rows, searchColor);\n    }\n\n    if (searchResults.lastMonth?.length) {\n        htmlContent += `<h3 style=\"color:#333;\">Last Month</h3>`;\n        const headers = ['Page', 'Active Users', 'Engaged Sessions', 'Engagement Rate', 'Event Count', 'Avg Position', 'CTR', 'Clicks', 'Impressions'];\n        const rows = searchResults.lastMonth.map(result => [\n            result.page,\n            result.activeUsers,\n            result.engagedSessions,\n            result.engagementRate.toFixed(2),\n            result.eventCount,\n            result.avgPosition.toFixed(2),\n            result.ctr.toFixed(2),\n            result.clicks,\n            result.impressions,\n        ]);\n        htmlContent += generateTable(headers, rows, searchColor);\n    }\n}\n\n// Country Views Section\nif (countryViews.thisMonth?.length || countryViews.lastMonth?.length) {\n    htmlContent += `<h2 style=\"color:${countryColor}; padding-bottom: 5px; border-bottom: 2px solid ${countryColor};\">Country Views</h2>`;\n    \n    if (countryViews.thisMonth?.length) {\n        htmlContent += `<h3 style=\"color:#333;\">This Month</h3>`;\n        const headers = ['Country', 'Active Users', 'New Users', 'Engagement Rate', 'Engaged Sessions', 'Event Count', 'Total Users', 'Sessions'];\n        const rows = countryViews.thisMonth.map(view => [\n            view.country,\n            view.activeUsers,\n            view.newUsers,\n            view.engagementRate.toFixed(2),\n            view.engagedSessions,\n            view.eventCount,\n            view.totalUsers,\n            view.sessions,\n        ]);\n        htmlContent += generateTable(headers, rows, countryColor);\n    }\n\n    if (countryViews.lastMonth?.length) {\n        htmlContent += `<h3 style=\"color:#333;\">Last Month</h3>`;\n        const headers = ['Country', 'Active Users', 'New Users', 'Engagement Rate', 'Engaged Sessions', 'Event Count', 'Total Users', 'Sessions'];\n        const rows = countryViews.lastMonth.map(view => [\n            view.country,\n            view.activeUsers,\n            view.newUsers,\n            view.engagementRate.toFixed(2),\n            view.engagedSessions,\n            view.eventCount,\n            view.totalUsers,\n            view.sessions,\n        ]);\n        htmlContent += generateTable(headers, rows, countryColor);\n    }\n}\n\n// Firma y marca de agua\nhtmlContent += `\n    <div style=\"margin-top: 50px; padding: 20px; border-top: 1px solid #eee;\">\n        <p style=\"color: #666; text-align: right;\">\n            Preparado por:<br>\n            <strong>Alex Rodriguez</strong><br>\n            SEO Modtecs<br> AI-Native Workflow Automation Architect<br>\n            <span style=\"font-size: 0.9em; color: #888;\">Building Solutions to Optimize your Personal and Professional Life</span>\n        </p>\n    </div>\n\n    <div style=\"position: fixed; bottom: 20px; right: 20px; opacity: 0.2; transform: rotate(-45deg);\">\n        <p style=\"font-size: 24px; color: #2D0388;\">MODTECS LLC</p>\n    </div>`;\n\n// Output the title and formatted HTML\nreturn {\n    json: {\n        title,\n        htmlContent,\n    }\n};"},"id":"e3b40fd4-1395-49d2-86c2-8a4943e23d4e","name":"Primera version basica","type":"n8n-nodes-base.code","typeVersion":2,"position":[260,1120]},{"parameters":{"sendTo":"alexroder94@gmail.com","subject":"=Modtecs {{ $json.title }}","message":"={{ $json.htmlContent }}","options":{"appendAttribution":false,"senderName":"Modtecs Report Analytics"}},"id":"a007a27b-85a3-4f9f-9729-3211828adb30","name":"TEST Email the Report","type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[800,1120],"webhookId":"80d4d964-449a-4599-b2de-bca9c8822bbd","credentials":{"gmailOAuth2":{"id":"TDGC962mg5h85KHo","name":"Gmail account"}}},{"parameters":{"content":"## Versions & Testing\n","height":340,"width":1300,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[120,980],"id":"83f21c0b-ea53-45a0-a059-b1fa751bbe4f","name":"Sticky Note"},{"parameters":{"method":"POST","url":"https://api.docraptor.com/docs","authentication":"genericCredentialType","genericAuthType":"httpBasicAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"={{$json}}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[980,520],"id":"716b0180-9cf3-444a-b6f3-123c8d0702f7","name":"Create pdf of Reports","credentials":{"httpHeaderAuth":{"id":"X3A0DqywbHLd3dYY","name":"Header Auth account"},"httpBasicAuth":{"id":"WN98QUuf6HTFLVUj","name":"Unnamed credential 2"}}},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Debug logging\n    console.log('Input items:', JSON.stringify(items, null, 2));\n    \n    // Check if items is an array and has content\n    if (!Array.isArray(items) || items.length === 0) {\n        console.log('Items is not an array or is empty');\n        throw new Error('Invalid data structure');\n    }\n\n    // Check if first item exists and has json property\n    if (!items[0] || !items[0].json) {\n        console.log('First item is missing or has no json property');\n        throw new Error('Invalid data structure');\n    }\n\n    // Get the analytics data\n    const analyticsData = items[0].json;\n    \n    // Check if analyticsData has rows\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\n        console.log('Analytics data is missing or has no rows array');\n        throw new Error('Invalid data structure');\n    }\n    \n    // Map each row to a simplified object\n    const simplified = analyticsData.rows.map(row => {\n        if (!row.dimensionValues?.[0]?.value || !row.metricValues?.length) {\n            console.log('Invalid row structure:', row);\n            throw new Error('Invalid row structure');\n        }\n        \n        return {\n            page: row.dimensionValues[0].value,\n            pageViews: parseInt(row.metricValues[0].value) || 0,\n            activeUsers: parseInt(row.metricValues[1].value) || 0,\n            viewsPerUser: parseFloat(row.metricValues[2].value) || 0,\n            eventCount: parseInt(row.metricValues[3].value) || 0\n        };\n    });\n    \n    // Convert to JSON string and encode for URL\n    return encodeURIComponent(JSON.stringify(simplified));\n}\n\n// Get input data and transform it\nconst urlString = transformToUrlString($input.all());\n\n// Return the result\nreturn { json: { urlString } };"},"id":"98bf432f-8e27-486e-bfb0-02b9557cda27","name":"Parse - Get Page Engagement Month","type":"n8n-nodes-base.code","position":[400,300],"typeVersion":2},{"parameters":{"propertyId":{"__rl":true,"value":"475830842","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"screenPageViews"},{"listName":"other","name":"activeUsers"},{"listName":"other","name":"screenPageViewsPerUser"},{"listName":"other","name":"eventCount"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"unifiedScreenName"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"30782be4-31b6-40a1-b749-610279110031","name":"Get Page Engagement Stats for prior Month","type":"n8n-nodes-base.googleAnalytics","position":[600,300],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"YURkxTNSnF1V55aJ","name":"Google Analytics account"}}},{"parameters":{"propertyId":{"__rl":true,"value":"475830842","mode":"id"},"dateRange":"last30days","metricsGA4":{"metricValues":[{"listName":"other","name":"screenPageViews"},{"listName":"other","name":"activeUsers"},{"listName":"other","name":"screenPageViewsPerUser"},{"listName":"other","name":"eventCount"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"unifiedScreenName"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"5bdde26c-1aa6-42c6-88b2-cd24fd2e6114","name":"Get Page Engagement Stats for this Month","type":"n8n-nodes-base.googleAnalytics","position":[200,300],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"YURkxTNSnF1V55aJ","name":"Google Analytics account"}}},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Debug logging\n    console.log('Input items:', JSON.stringify(items, null, 2));\n    \n    // Check if items is an array and has content\n    if (!Array.isArray(items) || items.length === 0) {\n        console.log('Items is not an array or is empty');\n        throw new Error('Invalid data structure');\n    }\n\n    // Check if first item exists and has json property\n    if (!items[0] || !items[0].json) {\n        console.log('First item is missing or has no json property');\n        throw new Error('Invalid data structure');\n    }\n\n    // Get the analytics data\n    const analyticsData = items[0].json;\n    \n    // Check if analyticsData has rows\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\n        console.log('Analytics data is missing or has no rows array');\n        throw new Error('Invalid data structure');\n    }\n    \n    // Filter out invalid rows and map each valid row to a simplified object\n    const simplified = analyticsData.rows\n        .filter(row => {\n            // Check if row is valid and its properties exist\n            const isValid = row \n                && row.dimensionValues \n                && row.dimensionValues[0] \n                && row.dimensionValues[0].value \n                && row.metricValues \n                && row.metricValues.length > 0;\n            \n            if (!isValid) {\n                console.log('Ignoring invalid or null row:', row);\n            }\n            return isValid;\n        })\n        .map(row => ({\n            page: row.dimensionValues[0].value,\n            pageViews: parseInt(row.metricValues[0].value) || 0,\n            activeUsers: parseInt(row.metricValues[1]?.value) || 0,\n            viewsPerUser: parseFloat(row.metricValues[2]?.value) || 0,\n            eventCount: parseInt(row.metricValues[3]?.value) || 0\n        }));\n    \n    // Convert to JSON string and encode for URL\n    return encodeURIComponent(JSON.stringify(simplified));\n}\n\n// Get input data and transform it\nconst urlString = transformToUrlString($input.all());\n\n// Return the result\nreturn { json: { urlString } };\n"},"id":"6f0ff9be-f61f-4aca-9116-f323f3d7d340","name":"Parse - Get Page Engagement Prior Month","type":"n8n-nodes-base.code","position":[800,300],"typeVersion":2},{"parameters":{"propertyId":{"__rl":true,"value":"475830842","mode":"id"},"dateRange":"last30days","metricsGA4":{"metricValues":[{}]},"dimensionsGA4":{"dimensionValues":[{}]},"returnAll":true,"simple":false,"additionalFields":{}},"id":"368ec550-b437-4cb2-8fe1-aa71264fc11d","name":"Get Google Search Results for this Month","type":"n8n-nodes-base.googleAnalytics","position":[1000,300],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"YURkxTNSnF1V55aJ","name":"Google Analytics account"}}},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Check if items is an array and get the JSON property\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping invalid or null entries\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows or rows without dimensionValues or metricValues\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                page: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                engagedSessions: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                eventCount: parseInt(row.metricValues[3]?.value) || 0,\n                avgPosition: parseFloat(row.metricValues[4]?.value) || 0.0,\n                ctr: parseFloat(row.metricValues[5]?.value) || 0.0,\n                clicks: parseInt(row.metricValues[6]?.value) || 0,\n                impressions: parseInt(row.metricValues[7]?.value) || 0\n            }));\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"02900615-227d-47a1-9990-23f1033b50c5","name":"Parse - Get Google Search This Month","type":"n8n-nodes-base.code","position":[1200,300],"typeVersion":2},{"parameters":{"propertyId":{"__rl":true,"value":"475830842","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{}]},"dimensionsGA4":{"dimensionValues":[{}]},"returnAll":true,"simple":false,"additionalFields":{}},"id":"f3b582ef-afee-424d-aae2-3e3f6d2f1a90","name":"Get Google Search Results for prior Month","type":"n8n-nodes-base.googleAnalytics","position":[1400,300],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"YURkxTNSnF1V55aJ","name":"Google Analytics account"}}},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Ensure the input is valid and contains data\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping null or invalid rows\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid or null row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                page: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                engagedSessions: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                eventCount: parseInt(row.metricValues[3]?.value) || 0,\n                avgPosition: parseFloat(row.metricValues[4]?.value) || 0.0,\n                ctr: parseFloat(row.metricValues[5]?.value) || 0.0,\n                clicks: parseInt(row.metricValues[6]?.value) || 0,\n                impressions: parseInt(row.metricValues[7]?.value) || 0\n            }));\n\n        // If no valid rows, return an empty array\n        if (simplified.length === 0) {\n            console.log('No valid rows to process');\n            return encodeURIComponent(JSON.stringify([]));\n        }\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"f4fdf871-ae27-403b-816e-065975a2f35a","name":"Parse - Get Google Search Prior Month","type":"n8n-nodes-base.code","position":[1600,300],"typeVersion":2},{"parameters":{"propertyId":{"__rl":true,"value":"475830842","mode":"id"},"dateRange":"last30days","metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"newUsers"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"eventCount"},{"listName":"other"},{"listName":"other","name":"sessions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"country"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"6a606172-3dc2-4ca5-8ac9-9970fd65d821","name":"Get Country views data for this Month","type":"n8n-nodes-base.googleAnalytics","position":[1820,300],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"YURkxTNSnF1V55aJ","name":"Google Analytics account"}}},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // In n8n, we need to check if items is an array and get the json property\n    const data = items[0].json;\n    \n    if (!data || !data.rows) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n    \n    try {\n        // Process each row\n        const simplified = data.rows.map(row => ({\n            country: row.dimensionValues[0].value,\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\n            newUsers: parseInt(row.metricValues[1].value) || 0,\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\n            engagedSessions: parseInt(row.metricValues[3].value) || 0,\n            eventCount: parseInt(row.metricValues[4].value) || 0,\n            totalUsers: parseInt(row.metricValues[5].value) || 0,\n            sessions: parseInt(row.metricValues[6].value) || 0\n        }));\n        \n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };"},"id":"b79b9586-14cf-4688-be30-abd69d6bd713","name":"Parse - Country Views This Month","type":"n8n-nodes-base.code","position":[2020,300],"typeVersion":2},{"parameters":{"propertyId":{"__rl":true,"value":"475830842","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"newUsers"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"eventCount"},{"listName":"other"},{"listName":"other","name":"sessions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"country"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"8cfe51fd-da4e-4cd2-a853-c28711070b5b","name":"Get Country views data for prior Month","type":"n8n-nodes-base.googleAnalytics","position":[2240,300],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"YURkxTNSnF1V55aJ","name":"Google Analytics account"}}},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Ensure the input is valid and contains data\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping invalid or null rows\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows or rows without required properties\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid or null row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                country: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                newUsers: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                engagedSessions: parseInt(row.metricValues[3]?.value) || 0,\n                eventCount: parseInt(row.metricValues[4]?.value) || 0,\n                totalUsers: parseInt(row.metricValues[5]?.value) || 0,\n                sessions: parseInt(row.metricValues[6]?.value) || 0\n            }));\n\n        // If no valid rows, return an empty array\n        if (simplified.length === 0) {\n            console.log('No valid rows to process');\n            return encodeURIComponent(JSON.stringify([]));\n        }\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"9c0320cc-5065-4aac-95d1-3781403eeca9","name":"Parse - Country Views Prior Month","type":"n8n-nodes-base.code","position":[2440,300],"typeVersion":2}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"Get Page Engagement Stats for this Month","type":"main","index":0}]]},"Set urlStrings":{"main":[[{"node":"Aggregate Data","type":"main","index":0}]]},"Aggregate Data":{"main":[[{"node":"Input All","type":"main","index":0}]]},"Format Data":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Input All":{"main":[[{"node":"Create pdf","type":"main","index":0},{"node":"Format Data","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Google Drive1","type":"main","index":0}]]},"Email the Report":{"main":[[]]},"Google Drive":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Google Drive1":{"main":[[{"node":"Email the Report","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Get Page Engagement Stats for this Month","type":"main","index":0}]]},"Create pdf":{"main":[[{"node":"Create pdf of Reports","type":"main","index":0}]]},"Create pdf of Reports":{"main":[[{"node":"Google Drive","type":"main","index":0}]]},"Parse - Get Page Engagement Month":{"main":[[{"node":"Get Page Engagement Stats for prior Month","type":"main","index":0}]]},"Get Page Engagement Stats for prior Month":{"main":[[{"node":"Parse - Get Page Engagement Prior Month","type":"main","index":0}]]},"Get Page Engagement Stats for this Month":{"main":[[{"node":"Parse - Get Page Engagement Month","type":"main","index":0}]]},"Parse - Get Page Engagement Prior Month":{"main":[[{"node":"Get Google Search Results for this Month","type":"main","index":0}]]},"Get Google Search Results for this Month":{"main":[[{"node":"Parse - Get Google Search This Month","type":"main","index":0}]]},"Parse - Get Google Search This Month":{"main":[[{"node":"Get Google Search Results for prior Month","type":"main","index":0}]]},"Get Google Search Results for prior Month":{"main":[[{"node":"Parse - Get Google Search Prior Month","type":"main","index":0}]]},"Parse - Get Google Search Prior Month":{"main":[[{"node":"Get Country views data for this Month","type":"main","index":0}]]},"Get Country views data for this Month":{"main":[[{"node":"Parse - Country Views This Month","type":"main","index":0}]]},"Parse - Country Views This Month":{"main":[[{"node":"Get Country views data for prior Month","type":"main","index":0}]]},"Get Country views data for prior Month":{"main":[[{"node":"Parse - Country Views Prior Month","type":"main","index":0}]]},"Parse - Country Views Prior Month":{"main":[[{"node":"Set urlStrings","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"817d8870-26ee-4033-9b19-3f380db768e1","triggerCount":1,"tags":[]}
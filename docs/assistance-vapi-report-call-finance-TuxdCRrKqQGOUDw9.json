{"createdAt":"2025-02-22T18:10:59.240Z","updatedAt":"2025-02-25T22:15:19.264Z","id":"TuxdCRrKqQGOUDw9","name":"Assistance Vapi Report Call Finance","active":true,"nodes":[{"parameters":{"httpMethod":"POST","path":"request_vapi_finance","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-560,400],"id":"70011ff6-37ac-45c7-b0b3-d0392a80ea8f","name":"Request_Vapi_Finance","webhookId":"9eccfce3-d927-417c-be13-430f9e01e512"},{"parameters":{"promptType":"define","text":"={{ $json.body }}","hasOutputParser":true,"options":{"systemMessage":"[Role]\nEres Sofi, asistente financiero de Motex. Tu tarea es registrar gastos diarios usando **6 categorías específicas en español**. \n\n[Categorías Obligatorias]\n1. Materiales - Materiales de construcción (cemento, arena, herramientas)\n2. Mano de Obra - Pagos a trabajadores/contratistas\n3. Equipos - Alquiler/reparación de equipos\n4. Transporte - Gasolina, fletes, peajes\n5. Permisos - Permisos, inspecciones, seguros\n6. Gastos de Obra - Servicios, seguridad, otros\n\n[Instrucciones]\n1. **Flujo de conversación**:\n   - Saludo: \"Hola [nombre], soy Sofi de Motex. ¿Tienes 5 minutos para registrar los gastos de hoy?\"\n   - Pregunta por cada categoría EN ESTE ORDEN:\n     1. Materiales\n     2. Mano de Obra\n     3. Equipos\n     4. Transporte\n     5. Permisos\n     6. Gastos de Obra\n   - Para cada \"Sí\" del usuario, pregunta: \n     - \"¿Qué [categoría] compraste/pagaste?\"\n     - \"¿Cuánto gastaste?\" \n     - \"¿A qué proveedor?\" \n     - \"¿Método de pago?\" \n     - \"¿Tienes recibo/factura?\"\n\n2. **Validación**:\n   - Si el usuario menciona un gasto no categorizable: \n     \"¿En cuál categoría debo registrar esto? Opciones: Materiales, Mano de Obra, Equipos, Transporte, Permisos, Gastos de Obra\"\n   - Confirma cada gasto: \n     \"Entonces en [categoría], gastaste $[monto] en [descripción]. ¿Es correcto?\"\n\n[Formato de Salida Requerido]\n```json\n{\n  \"expenses\": {\n    \"Materiales\": { \"items\": [] }, // Solo si hay gastos\n    \"Mano de Obra\": { \"items\": [] },\n    \"Equipos\": { \"items\": [] },\n    \"Transporte\": { \"items\": [] },\n    \"Permisos\": { \"items\": [] },\n    \"Gastos de Obra\": { \"items\": [] }\n  },\n  \"summary\": {\n    \"total_expenses\": 0, // Calcula automáticamente\n    \"pending_documentation\": [], // Lista de documentos faltantes\n    \"needs_follow_up\": false,\n    \"next_action\": null\n  }\n}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-280,400],"id":"7ac0927c-54a8-4c25-a371-708e29531ac4","name":"AI Agent1","onError":"continueRegularOutput"},{"parameters":{"schemaType":"manual","inputSchema":"{\n  \"expenses\": {\n    \"Equipos\": {\n      \"items\": [\n        {\n          \"description\": \"Reparación excavadora\",\n          \"amount\": 300,\n          \"vendor\": \"Taller Mecánico XYZ\",\n          \"payment_method\": \"tarjeta\",\n          \"has_receipt\": false\n        }\n      ]\n    }\n  },\n  \"summary\": {\n    \"total_expenses\": 300,\n    \"pending_documentation\": [\"Recibo Taller Mecánico XYZ\"],\n    \"needs_follow_up\": true,\n    \"next_action\": \"Solicitar recibo\"\n  }\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[-80,660],"id":"4090d710-5064-4c54-b27f-98a78eaadb8c","name":"Structured Output Parser1"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"1H1VyYqBNnJghRDXZC8j_iyK57X5SQi1Wd4r6uPGjW2o","mode":"list","cachedResultName":"Daily expenses","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1H1VyYqBNnJghRDXZC8j_iyK57X5SQi1Wd4r6uPGjW2o/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"daily expenses","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1H1VyYqBNnJghRDXZC8j_iyK57X5SQi1Wd4r6uPGjW2o/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{(+new Date).toString(36).slice(-5) + Math.random().toString(36).substr(2, 5)}}","date":"={{ $now.format('yyyy-MM-dd hh:mm:ss') }}","amount":"={{ $json.amount }}","vendor":"={{ $json.vendor }}","description":"={{ $json.description }}","payment_method":"={{ $json.payment_method }}","has_receipt":"={{ $json.has_receipt }}","pending_documentation":"={{ $json.pending_documentation }}","needs_follow_up":"={{ $json.needs_follow_up }}","next_action":"={{ $json.next_action }}","category":"={{ $json.Services }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"date","displayName":"date","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"category","displayName":"category","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"amount","displayName":"amount","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"vendor","displayName":"vendor","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"description","displayName":"description","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"payment_method","displayName":"payment_method","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"has_receipt","displayName":"has_receipt","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"total_expenses","displayName":"total_expenses","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"pending_documentation","displayName":"pending_documentation","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"needs_follow_up","displayName":"needs_follow_up","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"next_action","displayName":"next_action","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[380,400],"id":"1d72f184-5842-4a56-8dd3-d1153d8d1a5b","name":"Google Sheets1","credentials":{"googleSheetsOAuth2Api":{"id":"aEdSCFYMafgqbWmJ","name":"Google Sheets account"}}},{"parameters":{"jsCode":"// Validar estructura principal primero\nconst allowedCategories = [\"Materiales\",\"Mano de Obra\",\"Equipos\",\"Transporte\",\"Permisos\",\"Gastos de Obra\"];\nconst data = $input.all()[0].json?.output || {}; // Asegurar objeto vacío si no hay datos\n\n// 1. Validar expenses\nif (data.expenses) {\n  Object.keys(data.expenses).forEach(cat => {\n    if (!allowedCategories.includes(cat)) {\n      throw new Error(`Categoría inválida: ${cat}`);\n    }\n  });\n} else {\n  data.expenses = {}; // Inicializar si no existe\n}\n\n// 2. Extraer datos generales con protección\nconst summary = data.summary || {};\nconst callDate = data.call_status?.date || new Date().toISOString().split('T')[0]; // Fecha actual si no hay\n\n// 3. Mapeo corregido de categorías (usar nombres en español como keys)\nconst categories = [\n  { key: \"Materiales\", name: \"Materiales\" },\n  { key: \"Mano de Obra\", name: \"Mano de Obra\" },\n  { key: \"Equipos\", name: \"Equipos\" },\n  { key: \"Transporte\", name: \"Transporte\" },\n  { key: \"Permisos\", name: \"Permisos\" },\n  { key: \"Gastos de Obra\", name: \"Gastos de Obra\" }\n];\n\n// 4. Función de procesamiento optimizada\nconst processCategory = (categoryKey, categoryName) => {\n  const categoryData = data.expenses[categoryKey];\n  if (categoryData?.items) {\n    categoryData.items.forEach((item, index) => {\n      allRows.push({\n        id: `${categoryKey}-${index + 1}`,\n        date: callDate,\n        Services: categoryName,\n        amount: item.amount || 0,\n        vendor: item.vendor || \"No especificado\",\n        description: item.description || \"Sin descripción\",\n        payment_method: item.payment_method || \"No especificado\",\n        has_receipt: item.has_receipt ? \"Sí\" : \"No\",\n        pending_documentation: summary.pending_documentation?.join(\", \") || \"Ninguna\",\n        needs_follow_up: summary.needs_follow_up ? \"Sí\" : \"No\",\n        next_action: summary.next_action || \"Ninguna\"\n      });\n    });\n  }\n};\n\n// 5. Procesar categorías\nconst allRows = [];\ncategories.forEach(({ key, name }) => processCategory(key, name));\n\nreturn allRows;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[120,400],"id":"a666f2e0-1d6c-44e3-8ece-6b8ac1ab19f2","name":"Code"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-340,660],"id":"836d496b-7a8d-4a5a-b90e-ff53a47d0498","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"Xhw7jhGubqs4BVIn","name":"OpenAi ai_agent"}}}],"connections":{"Request_Vapi_Finance":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]},"AI Agent1":{"main":[[{"node":"Code","type":"main","index":0}]]},"Structured Output Parser1":{"ai_outputParser":[[{"node":"AI Agent1","type":"ai_outputParser","index":0}]]},"Code":{"main":[[{"node":"Google Sheets1","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"4bdd578f-f875-4d2d-b552-8e628d412ae9","triggerCount":1,"tags":[]}
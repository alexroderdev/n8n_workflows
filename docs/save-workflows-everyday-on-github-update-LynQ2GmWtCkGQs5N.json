{"createdAt":"2025-01-25T02:14:21.937Z","updatedAt":"2025-01-25T02:46:54.818Z","id":"LynQ2GmWtCkGQs5N","name":"Save workflows everyday on Github UPDATE","active":false,"nodes":[{"parameters":{"options":{}},"id":"617ea82a-1e5e-4051-bd65-5d9391a9a136","name":"Set date","type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[280,200]},{"parameters":{"operation":"formatDate","date":"={{ $json.currentDate }}","format":"custom","customFormat":"dd-MM-yyyy/H:mm","options":{}},"id":"c938c8c1-e576-4646-95f7-2b99e253eb25","name":"Format date","type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[480,200]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"commitDate","value":"={{ $json.formattedDate }}"}]},"options":{}},"id":"f5d9025a-8cae-4508-bc09-73f93c567168","name":"Set commit date","type":"n8n-nodes-base.set","typeVersion":2,"position":[680,200]},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"value":"alexroderdev","mode":"name"},"repository":{"__rl":true,"value":"n8n_workflows","mode":"name"},"filePath":"=docs"},"id":"3774c38e-6e14-4f5a-9b7e-ef199fcc587a","name":"List files from repository [GITHUB]","type":"n8n-nodes-base.github","typeVersion":1,"position":[880,200],"alwaysOutputData":true,"credentials":{"githubApi":{"id":"v3iseuonNOSBuVoE","name":"GitHub account"}}},{"parameters":{"operation":"aggregateItems","fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"name"}]},"options":{}},"id":"1b076cee-1612-46ca-98d3-9917c14b6f5d","name":"Combine file names [GITHUB]","type":"n8n-nodes-base.itemLists","typeVersion":2.1,"position":[1080,200]},{"parameters":{"filters":{},"requestOptions":{}},"id":"7848a2b3-8026-40c8-865a-1ed850fa3f53","name":"Retrieve workflows [N8N]","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[1280,200],"credentials":{"n8nApi":{"id":"7Nx3lyXbeCHnN3pg","name":"n8n account"}}},{"parameters":{"mode":"jsonToBinary","options":{"fileName":"={{ $json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $json.id }}.json"}},"id":"afdef44f-660f-4877-be93-d2a519551ffb","name":"Move JSON to binary","type":"n8n-nodes-base.moveBinaryData","typeVersion":1,"position":[1480,200]},{"parameters":{"batchSize":1,"options":{}},"id":"dbdf9884-97da-4451-ac43-9d49714bc8af","name":"Split to single items","type":"n8n-nodes-base.splitInBatches","typeVersion":2,"position":[1880,200]},{"parameters":{"conditions":{"string":[{"value1":"={{ $node['Combine file names [GITHUB]'].json.name }}","operation":"contains","value2":"={{ $binary.data.fileName }}"}]}},"id":"9604811a-ed95-47f0-97c7-7eca8281ec94","name":"Check if file exists in repository","type":"n8n-nodes-base.if","typeVersion":1,"position":[2140,180]},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"value":"alexroderdev","mode":"list","cachedResultName":"alexroderdev","cachedResultUrl":"https://github.com/alexroderdev"},"repository":{"__rl":true,"value":"n8n_workflows","mode":"list","cachedResultName":"n8n_workflows","cachedResultUrl":"https://github.com/alexroderdev/n8n_workflows"},"filePath":"=docs/{{ $binary.data.fileName }}","binaryData":true,"commitMessage":"=backup-{{ $node['Set commit date'].json.commitDate }}"},"id":"e3a3fcea-5fbb-421d-9e08-4e759bdabc57","name":"Update file [GITHUB]","type":"n8n-nodes-base.github","typeVersion":1,"position":[2120,-20],"credentials":{"githubApi":{"id":"v3iseuonNOSBuVoE","name":"GitHub account"}}},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"alexroderdev","mode":"list","cachedResultName":"alexroderdev","cachedResultUrl":"https://github.com/alexroderdev"},"repository":{"__rl":true,"value":"n8n_workflows","mode":"list","cachedResultName":"n8n_workflows","cachedResultUrl":"https://github.com/alexroderdev/n8n_workflows"},"filePath":"=docs/{{ $binary.data.fileName }}","binaryData":true,"commitMessage":"=backup-{{ $node['Set commit date'].json.commitDate }}","additionalParameters":{"committer":{"name":"AlexRoderDev","email":"alexroder94@gmail.com"}}},"id":"963beccd-a093-45f0-af63-4dae0c806c59","name":"Upload file [GITHUB]","type":"n8n-nodes-base.github","typeVersion":1,"position":[2380,200],"credentials":{"githubApi":{"id":"v3iseuonNOSBuVoE","name":"GitHub account"}}},{"parameters":{"content":"## Set and format date/time\nThose nodes are responsible for setting a current date and time in format `dd-MM-yyyy/H:mm`. Date and time are used to compose commit messages in GitHub, for example: `backup-12-07-2023/14:18`.","height":339.42690909090965,"width":585.4045090909088,"color":4},"id":"54fc51a8-df53-4258-9d00-cb9d03db7db8","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[240,40]},{"parameters":{"content":"## Make a list of existing files\nReturn a list of existing files (backups) in GitHub repository. Data returned by those nodes is used by \"IF\" node (later in workflow) to check whether the backup files should be created or updated.","height":339.42690909090965,"width":389.89265454545443},"id":"bf000ff8-1448-45b2-bce4-3f07e1170809","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[840,40]},{"parameters":{"content":"## Retrieve workflows\nGet all workflows form your n8n instance. Remember that **your credentials need to point to the instance that you want to backup.**","height":339.42690909090965,"width":384.14708363636373},"id":"f2c255c1-cdfb-4612-9931-85a9a1b86f87","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1260,40]},{"parameters":{"content":"## Upload backup\nSplit JSON files into batches of 1, check if they were uploaded to repository before. If yes (true), upload the new version of the file. Otherwise (false) create the file in repository.","height":731.633426614796,"width":1113.1816377093287,"color":3},"id":"22f671c7-6b95-4af0-b976-22ee54702e37","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1820,-220]},{"parameters":{"chatId":"792267610 ","text":"=‚úÖ Backup has completed workflows have been processed.","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2760,0],"id":"961db3e8-159c-4acf-a659-5a7f78d509a2","name":"Telegram","credentials":{"telegramApi":{"id":"gaOHgbat0CO2TRi9","name":"Telegram account"}}},{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 0 * * *"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-40,200],"id":"b2a4b045-56da-428f-a098-b2c339d11a79","name":"Schedule Trigger"},{"parameters":{"jsCode":"return {\n    ...($input || {}),\n    contadores: {\n        totalArchivos: Array.isArray($input) ? $input.length : 1,\n        guardadosExitosamente: 0,\n        actualizadosExitosamente: 0,\n        conErrores: 0,\n        archivosNuevos: [],\n        archivosActualizados: []\n    }\n};"},"id":"167b93f8-2019-4f14-8a65-20ed105f1d40","name":"Code","type":"n8n-nodes-base.code","typeVersion":2,"position":[1660,680]},{"parameters":{"jsCode":"// Creamos un nuevo objeto con todos los datos\nconst datos = {\n    ...$input,\n    contadores: {\n        totalArchivos: $input.contadores?.totalArchivos || 0,\n        guardadosExitosamente: $input.contadores?.guardadosExitosamente || 0,\n        actualizadosExitosamente: ($input.contadores?.actualizadosExitosamente || 0) + 1,\n        conErrores: $input.contadores?.conErrores || 0,\n        archivosNuevos: $input.contadores?.archivosNuevos || [],\n        archivosActualizados: [...($input.contadores?.archivosActualizados || []), $input.name || 'archivo']\n    }\n};\n\nreturn datos;"},"id":"e7b634e0-2b1f-47ce-8a9d-580b436c0c2a","name":"Code1","type":"n8n-nodes-base.code","typeVersion":2,"position":[3280,-220]},{"parameters":{"jsCode":"// Creamos un nuevo objeto con todos los datos\nconst datos = {\n    ...$input,\n    contadores: {\n        totalArchivos: $input.contadores?.totalArchivos || 0,\n        guardadosExitosamente: ($input.contadores?.guardadosExitosamente || 0) + 1,\n        actualizadosExitosamente: $input.contadores?.actualizadosExitosamente || 0,\n        conErrores: $input.contadores?.conErrores || 0,\n        archivosNuevos: [...($input.contadores?.archivosNuevos || []), $input.name || 'archivo'],\n        archivosActualizados: $input.contadores?.archivosActualizados || []\n    }\n};\n\nreturn datos;"},"id":"0320eeea-431b-4ad7-8a60-4123a148d502","name":"Code2","type":"n8n-nodes-base.code","typeVersion":2,"position":[3360,-60]},{"parameters":{"jsCode":"// Analizamos los resultados de las operaciones de GitHub\nconst resultados = $input;\nconst contadores = {\n    totalArchivos: resultados.length,\n    guardadosExitosamente: 0,\n    actualizadosExitosamente: 0,\n    conErrores: 0,\n    archivosNuevos: [],\n    archivosActualizados: []\n};\n\n// Procesamos cada resultado\nresultados.forEach(item => {\n    if (item.error) {\n        contadores.conErrores++;\n    } else if (item.isNew) {  // o alguna propiedad que indique si fue nuevo\n        contadores.guardadosExitosamente++;\n        contadores.archivosNuevos.push(item.name || 'archivo');\n    } else {\n        contadores.actualizadosExitosamente++;\n        contadores.archivosActualizados.push(item.name || 'archivo');\n    }\n});\n\nconst mensaje = `üìä Resumen de Backup:\nüìÅ Total archivos procesados: ${contadores.totalArchivos}\nüÜï Archivos nuevos creados: ${contadores.guardadosExitosamente}\n${contadores.archivosNuevos.length ? '\\nArchivos nuevos:\\n- ' + contadores.archivosNuevos.join('\\n- ') : ''}\nüîÑ Archivos actualizados: ${contadores.actualizadosExitosamente}\n${contadores.archivosActualizados.length ? '\\nArchivos actualizados:\\n- ' + contadores.archivosActualizados.join('\\n- ') : ''}\n‚ùå Errores encontrados: ${contadores.conErrores}`;\n\nreturn { message: mensaje };"},"id":"5416c56a-7624-48ac-beb4-a8bbe06464e6","name":"Code3","type":"n8n-nodes-base.code","typeVersion":2,"position":[2580,0]},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"id":"84ecbb50-bee0-4500-bcfb-ad7fa9e044f7","name":"Merge","type":"n8n-nodes-base.merge","typeVersion":3,"position":[2380,0]}],"connections":{"Set date":{"main":[[{"node":"Format date","type":"main","index":0}]]},"Format date":{"main":[[{"node":"Set commit date","type":"main","index":0}]]},"Set commit date":{"main":[[{"node":"List files from repository [GITHUB]","type":"main","index":0}]]},"List files from repository [GITHUB]":{"main":[[{"node":"Combine file names [GITHUB]","type":"main","index":0}]]},"Combine file names [GITHUB]":{"main":[[{"node":"Retrieve workflows [N8N]","type":"main","index":0}]]},"Retrieve workflows [N8N]":{"main":[[{"node":"Move JSON to binary","type":"main","index":0}]]},"Move JSON to binary":{"main":[[{"node":"Split to single items","type":"main","index":0}]]},"Split to single items":{"main":[[{"node":"Check if file exists in repository","type":"main","index":0}]]},"Check if file exists in repository":{"main":[[{"node":"Update file [GITHUB]","type":"main","index":0}],[{"node":"Upload file [GITHUB]","type":"main","index":0}]]},"Update file [GITHUB]":{"main":[[{"node":"Split to single items","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"Upload file [GITHUB]":{"main":[[{"node":"Split to single items","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"Schedule Trigger":{"main":[[{"node":"Set date","type":"main","index":0}]]},"Code3":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Code3","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ba801fe1-50e7-47ed-b68f-5b90b675dbaa","triggerCount":1,"tags":[{"createdAt":"2024-11-28T17:36:50.337Z","updatedAt":"2024-11-28T17:36:50.337Z","id":"xZjGAVS33XRVpHr8","name":"test"}]}
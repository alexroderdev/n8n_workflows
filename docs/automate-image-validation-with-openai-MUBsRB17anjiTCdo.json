{"createdAt":"2025-01-29T02:07:00.447Z","updatedAt":"2025-02-09T03:42:46.416Z","id":"MUBsRB17anjiTCdo","name":"Automate Image Validation with OpenAi","active":false,"nodes":[{"parameters":{},"id":"6c78b4c7-993b-410d-93e7-e11b3052e53b","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[540,2040],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"6baa3e08-8957-454e-8ee9-d5414a0ff990","name":"data","type":"array","value":"={{\n[\n{\n  \"name\": \"Credito\",\n  \"url\": \"https://drive.google.com/file/d/1G39v2Oeb1l_u1_FF0s3TFMk76kvqCHrx/view?usp=sharing\",\n},\n]\n}}"}]},"options":{}},"id":"f69847c7-1f4c-4fe5-a419-87e227c20f48","name":"Photo URLs1","type":"n8n-nodes-base.set","position":[940,2020],"typeVersion":3.4},{"parameters":{"fieldToSplitOut":"data","options":{}},"id":"bd5cd3d3-41e1-4bd4-b06f-e4b731f39d72","name":"Photos To List1","type":"n8n-nodes-base.splitOut","position":[1100,2020],"typeVersion":1},{"parameters":{"operation":"download","fileId":{"__rl":true,"mode":"url","value":"={{ $json.url }}"},"options":{}},"id":"d923d687-27e7-427f-8fcf-dcc3dc4b9931","name":"Download Photos1","type":"n8n-nodes-base.googleDrive","position":[1280,2020],"typeVersion":3,"credentials":{"googleDriveOAuth2Api":{"id":"5LP9aPOCoDSbZsTa","name":"Google Drive account"}}},{"parameters":{"operation":"resize","width":1024,"height":1024,"resizeOption":"onlyIfLarger","options":{}},"id":"97541986-d52b-4c3c-8534-9b1634066315","name":"Resize For AI1","type":"n8n-nodes-base.editImage","position":[1640,1880],"typeVersion":1},{"parameters":{"content":"## 1. Import Photos To Validate\n[Read more about using Google Drive](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googledrive)\n\nIn this demonstration, we'll import 5 different portraits to test our AI vision model. For convenience, we'll use Google Drive but feel free to swap this out for other sources such as other storage or by using webhooks.","height":438,"width":594,"color":7},"id":"019c3983-5673-48a6-8795-61b62d5e73fb","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[880,1820],"typeVersion":1},{"parameters":{"content":"## 2. AI-Powered Financial Document Analyzer for Uruguayan Credit Assessment\n[Learn more about Basic LLM Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nVerifying financial documents for credit assessment in Uruguay is a crucial use-case for AI vision, and automating this process through n8n provides significant efficiency gains. We've incorporated the guidelines from Uruguay's financial regulators (BCU and DGI) and have configured the AI to validate incoming document images following these regulations. The system analyzes critical elements such as nominal and liquid amounts, payment details, and document authenticity, while ensuring compliance with local financial requirements.\n\nThe AI model has been trained to:\n\nValidate document authenticity and legibility\nExtract and verify key financial information\nIdentify both nominal and liquid amounts\nVerify compliance with Uruguayan financial regulations\nEnsure document quality meets processing standards\nA structured output parser is used to organize the AI's analysis into a standardized format, which can be easily integrated into your existing credit assessment systems, databases, or any backend of your choosing. This automated approach significantly reduces processing time while maintaining high accuracy in document verification.","height":849,"width":774,"color":7},"id":"ba051cd8-0759-4d7f-9732-9e3a858156b7","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[1560,1420],"typeVersion":1},{"parameters":{"content":"### This workflow analyzes financial documents (invoices, salary receipts, and payment vouchers) and verifies if they are valid for credit processes in Uruguay. This is achieved using an AI vision model that follows the regulations of the Central Bank of Uruguay (BCU) and the General Tax Directorate (DGI), focusing especially on the validation of nominal and liquid amounts, as well as the authenticity and legibility of the document.\n\nOpenAI's vision model was found to perform well for understanding photographs and so is recommended for this type of workflow. However, any capable vision model should work.\n","height":610.0104651162792,"width":386},"id":"b8517519-2fe0-40f4-b9f5-dd6dc117eba8","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[420,1640],"typeVersion":1},{"parameters":{"content":"## First Version - Financial Document Analyzer for Credit Assessment\n### This workflow demonstrates how to use AI vision to analyze and validate financial documents (such as salary receipts, invoices, and payment vouchers) for credit assessment in Uruguay. The system follows specific guidelines from Uruguayan financial regulators (BCU and DGI) to verify document authenticity and extract critical financial information.","height":1100,"width":2100,"color":4},"type":"n8n-nodes-base.stickyNote","position":[340,1280],"typeVersion":1,"id":"96778002-4b41-4414-83a0-db21141ce973","name":"Sticky Note6"},{"parameters":{"promptType":"define","text":"Document Analysis and Validation Protocol (Uruguay)\n\nSTEP 1 - DOCUMENT IDENTIFICATION\nFirst, identify the document type from these categories:\n\nA. Utility Bills:\n- UTE (Electricity invoice)\n- OSE (Water invoice)\n- ANTEL (Telecommunications invoice)\n\nB. Social Security:\n- BPS Receipt\n- Salary Receipt\n\nC. Banking:\n- Bank Statement\n- Payment Receipt\n\nSTEP 2 - DOCUMENT-SPECIFIC VALIDATION\n\nFOR UTE INVOICES:\nRequired Elements:\n- Invoice number\n- Customer number\n- Consumption details\n- Amount breakdown\nKey Identifiers:\n- UTE logo\n- kWh consumption\n- Power rate details\n\nFOR BPS RECEIPTS:\nRequired Elements:\n- Receipt number\n- Beneficiary ID\n- Nominal and liquid amounts\n- Deductions breakdown\nKey Identifiers:\n- BPS logo\n- SNIS/IASS deductions\n- Benefit type\n\n[Similar sections for other document types]\n\nSTEP 3 - QUALITY ASSESSMENT\nTechnical Requirements:\n- Resolution check\n- Format validation\n- Size verification\n- Color assessment\n\nCapture Quality:\n- Document completeness\n- Corner visibility\n- Background clarity\n- Text legibility\n\nRESPONSE FORMAT:\n{\n    \"documentAnalysis\": {\n        \"identified\": {\n            \"type\": \"string [UTE_INVOICE, BPS_RECEIPT, etc.]\",\n            \"confidence\": \"number (0-1)\"\n        },\n        \"quality\": {\n            \"isValid\": \"boolean\",\n            \"technicalIssues\": [\"array of strings\"],\n            \"captureIssues\": [\"array of strings\"]\n        },\n        \"validation\": {\n            \"requiredElements\": {\n                \"present\": [\"array of strings\"],\n                \"missing\": [\"array of strings\"]\n            },\n            \"overallStatus\": \"boolean\"\n        }\n    }\n}\n\nVALIDATION RULES:\n1. Each document type has specific required elements\n2. Quality requirements apply to all documents\n3. Missing required elements invalidate the document\n4. Document type must be identified before validation\n5. Unknown document types return type: \"UNKNOWN\"","hasOutputParser":true,"messages":{"messageValues":[{"message":"=Complete Guide for Financial Document Analysis in Uruguay\n\n1. Technical Image Requirements\nThe photo must meet:\nMinimum resolution of 600x750 pixels\nSize between 50KB and 10MB\nColor (not black and white)\nNo digital edits or alterations\nFormat JPG, PNG or PDF\n\n2. Capture Requirements\nFundamental Elements:\nComplete document visible in frame\nAll corners visible\nNo shadows hiding information\nNo reflections or glare\nClean, clear background\nCompletely legible text\n\n3. Critical Information to Identify\n\nA. Identification Data:\nCompany RUT\nInvoice/document number\nDocument type (invoice, e-ticket, salary receipt)\nIssue and expiration period\n\nB. Beneficiary/Client Information:\nFull name\nDocument number (CI/RUT)\nAddress\nPosition or role (for salary receipts)\n\nC. Key Amount Identification\nFor Salary Receipts:\nNOMINAL: Gross amount before deductions\nLIQUID: Final amount after all deductions\nBreakdown of:\n  - Base salary\n  - Supplements\n  - Overtime\n  - Annual bonus\n  - Other benefits\n\nDeductions and Retentions:\nSNIS (National Health System)\nIASS (Social Security Assistance Tax)\nLegal retentions\nOther specific deductions\n\nD. For Invoices:\nSubtotal\nItemized VAT\nFinal total\nPayment method\nPayment status\n\n4. Verification Elements\nClearly visible subtotals\nCorrect calculations between amounts\nCorresponding payment period\nIssue and due dates\nRequired signatures and stamps\n\n5. Accepted Document Types\nSalary receipts\nInvoices (e-Invoices)\nE-tickets\nPayment receipts\nAccount statements\nPayment certificates\nBank transfer receipts\n\n6. Authenticity Verification\nQR Code (if applicable)\nCAE Number\nDigital stamps\nAuthorized signatures\nInstitutional stamps\n\n7. Special Considerations\nFor multiple documents, photograph each page separately\nContinuous documents require complete capture\nDocuments with information on both sides require both photographs\nPrefer original digital versions when available\n\n8. Warnings and Restrictions\nDocuments not accepted if:\n  - Cut or partially visible\n  - With crossouts or manual corrections\n  - Expired or out of date\n  - With irrelevant sensitive personal information\n  - Illegible or blurry\n\n9. Final Validation Elements\nVerify all amounts match correctly\nConfirm dates are consistent\nEnsure all critical information is visible\nValidate deductions and retentions comply with current regulations\n\n10. Additional Required Information\nBilling period\nPayment method\nPaying entity\nControl or reference number\nIssuer contact information\n\nAnalyze the provided financial document image and return a JSON response following exactly this structure:\n1. Validate if the document is valid and meets quality requirements\n2. Extract all relevant information including amounts, dates, and identifiers\n3. Format the response according to the specified JSON schema\n4. Include any validation errors found\n\nThe response must include all required fields: is_valid, photo_quality, and document_data."},{"type":"HumanMessagePromptTemplate","messageType":"imageBinary"}]}},"id":"458b8f36-7da1-4ebd-94cb-7c334b39d5f8","name":"Bill and charge Photo Validator","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[1880,1880],"typeVersion":1.4},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{"responseFormat":"text"}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1840,2120],"id":"299cc321-377c-45cd-8ee5-548dcab4658f","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"Xhw7jhGubqs4BVIn","name":"OpenAi ai_agent"}}},{"parameters":{"jsonSchemaExample":"{\n    \"output\": {\n        \"is_valid\": true,\n        \"photo_quality\": {\n            \"description\": \"The document image is clear and well-lit, showing a salary receipt from BPS with all corners visible and text legible\",\n            \"meets_requirements\": true,\n            \"resolution\": {\n                \"width\": 800,\n                \"height\": 1200\n            },\n            \"file_size\": 250\n        },\n        \"document_data\": {\n            \"document_type\": \"salary_receipt\",\n            \"control_number\": \"1111111\",\n            \"issue_date\": \"2024/11\",\n            \"period\": {\n                \"start_date\": \"2024-11-01\",\n                \"end_date\": \"2024-11-30\"\n            },\n            \"issuer\": {\n                \"name\": \"ABITAB S.A\",\n                \"rut\": \"26\"\n            },\n            \"recipient\": {\n                \"name\": \"ejemplo ejemplo\",\n                \"document_id\": \"111111111\"\n            },\n            \"amounts\": {\n                \"nominal\": 104441.00,\n                \"liquid\": 70605.00,\n                \"currency\": \"UYU\"\n            },\n            \"deductions\": [\n                {\n                    \"description\": \"SNIS 4.5%\",\n                    \"amount\": 4700.00,\n                    \"type\": \"health_insurance\"\n                },\n                {\n                    \"description\": \"IASS\",\n                    \"amount\": 5793.00,\n                    \"type\": \"tax\"\n                }\n            ],\n            \"payment_info\": {\n                \"method\": \"Efectivo\",\n                \"status\": \"Pending\",\n                \"payment_date\": \"2024-12-13\"\n            }\n        },\n        \"validation_errors\": []\n    }\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[2100,2120],"id":"a7f0deaa-ef7d-46e4-ba96-a723f124c999","name":"Structured Output Parser"},{"parameters":{"functionCode":"function transformarYProcesarDatos(datosImagen) {\n    try {\n        // Funciones auxiliares\n        function calculoMargenUY(nominal, liquido) {\n            const minimoLegalUY = nominal * 0.35;\n            const diferencia = liquido - minimoLegalUY;\n            const margenMinimo = 3000;\n            return {\n                tieneMargen: diferencia > margenMinimo,\n                margenDisponible: diferencia\n            };\n        }\n\n        function obtenerMensajeSegunTipo(tipoUsuario, resultado) {\n            return resultado.tieneMargen \n                ? obtenerMensajeAprobado(tipoUsuario)\n                : obtenerMensajeRechazado(tipoUsuario);\n        }\n\n        function obtenerMensajeAprobado(tipoUsuario) {\n            if (tipoUsuario === 'empleado') {\n                return `Está en condiciones de solicitar un crédito. Por favor, envíenos fotos nítidas y legibles de la siguiente documentación:\\n\\n• 𝗖𝗲́𝗱𝘂𝗹𝗮 𝗱𝗲 𝗶𝗱𝗲𝗻𝘁𝗶𝗱𝗮𝗱 𝘃𝗶𝗴𝗲𝗻𝘁𝗲\\n• 𝗨́𝗹𝘁𝗶𝗺𝗼𝘀 𝗱𝗼𝘀 𝗿𝗲𝗰𝗶𝗯𝗼𝘀 𝗱𝗲 𝘀𝘂𝗲𝗹𝗱𝗼\\n• 𝗖𝗼𝗻𝘀𝘁𝗮𝗻𝗰𝗶𝗮 𝗱𝗲 𝗱𝗼𝗺𝗶𝗰𝗶𝗹𝗶𝗼 (𝗽𝘂𝗲𝗱𝗲 𝘀𝗲𝗿 𝘂𝗻 𝗿𝗲𝗰𝗶𝗯𝗼 𝗱𝗲 𝗨𝗧𝗘, 𝗢𝗦𝗘, 𝗔𝗡𝗧𝗘𝗟, 𝗲𝘀𝘁𝗮𝗱𝗼 𝗱𝗲 𝗰𝘂𝗲𝗻𝘁𝗮, 𝗲𝘁𝗰.) \\n\\n𝗨𝗻𝗮 𝘃𝗲𝘇 𝗿𝗲𝗰𝗶𝗯𝗶𝗱𝗼𝘀, 𝗽𝗿𝗼𝗰𝗲𝗱𝗲𝗿𝗲𝗺𝗼𝘀 𝗮 𝗲𝘃𝗮𝗹𝘂𝗮𝗿 𝘀𝘂 𝘀𝗼𝗹𝗶𝗰𝗶𝘁𝘂𝗱, 𝗱𝗲𝗻𝘁𝗿𝗼 𝗱𝗲𝗹 𝗵𝗼𝗿𝗮𝗿𝗶𝗼 𝗱𝗲 𝗮𝘁𝗲𝗻𝗰𝗶𝗼́𝗻 𝗮𝗹 𝗽𝘂́𝗯𝗹𝗶𝗰𝗼, 𝗹𝘂𝗻𝗲𝘀 𝗮 𝘃𝗶𝗲𝗿𝗻𝗲𝘀 𝗱𝗲 𝟵 𝗮 𝟭𝟳 𝗵𝗼𝗿𝗮𝘀.`;\n            } else {\n                return `Está en condiciones de solicitar un crédito. Por favor, envíenos fotos nítidas y legibles de la siguiente documentación:\\n\\n• 𝗖𝗲́𝗱𝘂𝗹𝗮 𝗱𝗲 𝗶𝗱𝗲𝗻𝘁𝗶𝗱𝗮𝗱 𝘃𝗶𝗴𝗲𝗻𝘁𝗲\\n• 𝗨́𝗹𝘁𝗶𝗺𝗼𝘀 𝗱𝗼𝘀 𝗿𝗲𝗰𝗶𝗯𝗼𝘀 𝗱𝗲 𝗹𝗮 𝗽𝗮𝘀𝗶𝘃𝗶𝗱𝗮𝗱\\n• 𝗖𝗼𝗻𝘀𝘁𝗮𝗻𝗰𝗶𝗮 𝗱𝗲 𝗱𝗼𝗺𝗶𝗰𝗶𝗹𝗶𝗼 (𝗽𝘂𝗲𝗱𝗲 𝘀𝗲𝗿 𝘂𝗻 𝗿𝗲𝗰𝗶𝗯𝗼 𝗱𝗲 𝗨𝗧𝗘, 𝗢𝗦𝗘, 𝗔𝗡𝗧𝗘𝗟, 𝗲𝘀𝘁𝗮𝗱𝗼 𝗱𝗲 𝗰𝘂𝗲𝗻𝘁𝗮, 𝗲𝘁𝗰.) \\n\\n𝗨𝗻𝗮 𝘃𝗲𝘇 𝗿𝗲𝗰𝗶𝗯𝗶𝗱𝗼𝘀, 𝗽𝗿𝗼𝗰𝗲𝗱𝗲𝗿𝗲𝗺𝗼𝘀 𝗮 𝗲𝘃𝗮𝗹𝘂𝗮𝗿 𝘀𝘂 𝘀𝗼𝗹𝗶𝗰𝗶𝘁𝘂𝗱, 𝗱𝗲𝗻𝘁𝗿𝗼 𝗱𝗲𝗹 𝗵𝗼𝗿𝗮𝗿𝗶𝗼 𝗱𝗲 𝗮𝘁𝗲𝗻𝗰𝗶𝗼́𝗻 𝗮𝗹 𝗽𝘂́𝗯𝗹𝗶𝗰𝗼, 𝗹𝘂𝗻𝗲𝘀 𝗮 𝘃𝗶𝗲𝗿𝗻𝗲𝘀 𝗱𝗲 𝟵 𝗮 𝟭𝟳 𝗵𝗼𝗿𝗮𝘀.`;\n            }\n        }\n\n        function obtenerMensajeRechazado(tipoUsuario) {\n            return `Gracias por su consulta. Por ahora no cuenta con el margen necesario, puede consultar más adelante.`;\n        }\n\n        // Verificar y extraer los datos\n        if (!datosImagen || !datosImagen.output || !datosImagen.output.output) {\n            throw new Error(\"Estructura de datos inválida o incompleta\");\n        }\n\n        const documentData = datosImagen.output.output.document_data;\n        const amounts = documentData.amounts;\n\n        // Extraer y validar montos\n        const montoNominal = parseFloat(amounts.nominal);\n        const montoLiquido = parseFloat(amounts.liquid);\n\n        if (isNaN(montoNominal) || isNaN(montoLiquido)) {\n            throw new Error(\"Los montos no son números válidos\");\n        }\n\n        // Validaciones adicionales\n        if (montoLiquido >= montoNominal) {\n            throw new Error(\"El monto líquido no puede ser mayor o igual al monto nominal\");\n        }\n\n        if (montoNominal < 0 || montoLiquido < 0) {\n            throw new Error(\"Los montos no pueden ser negativos\");\n        }\n\n        // Calcular margen y obtener mensaje\n        const resultado = calculoMargenUY(montoNominal, montoLiquido);\n        const tipoUsuario = documentData.issuer?.name?.toUpperCase().includes('BPS') ? 'jubilado' : 'empleado';\n        const mensajeRespuesta = obtenerMensajeSegunTipo(tipoUsuario, resultado);\n\n        // Retornar respuesta completa\n        return {\n            status: \"success\",\n            message: mensajeRespuesta,\n            data: {\n                tipoUsuario,\n                tieneMargen: resultado.tieneMargen,\n                margenDisponible: resultado.margenDisponible,\n                parametros: {\n                    parameters: tipoUsuario === 'jubilado' ? {\n                        montoNominal_jubilado: montoNominal.toString(),\n                        montoLiquido_jubilado: montoLiquido.toString()\n                    } : {\n                        montoNominal_empleado: montoNominal.toString(),\n                        montoLiquido_empleado: montoLiquido.toString()\n                    }\n                }\n            }\n        };\n\n    } catch (error) {\n        console.error(\"Error en el procesamiento:\", error);\n        return {\n            status: \"error\",\n            message: error.message,\n            debug: {\n                error: error.message,\n                stack: error.stack\n            }\n        };\n    }\n}\n\n// Código principal para n8n\nconst items = $input.all();\nif (items && items.length > 0 && items[0].json) {\n    const datosImagen = items[0].json;\n    return transformarYProcesarDatos(datosImagen);\n} else {\n    return {\n        status: \"error\",\n        message: \"No se encontraron datos en la entrada\",\n        debug: {\n            items: items\n        }\n    };\n}"},"name":"Code","type":"n8n-nodes-base.function","typeVersion":1,"position":[2320,1880],"id":"7fb873e3-74d8-4f6c-b284-5123e8ffb98d","alwaysOutputData":false}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"Photo URLs1","type":"main","index":0}]]},"Photo URLs1":{"main":[[{"node":"Photos To List1","type":"main","index":0}]]},"Photos To List1":{"main":[[{"node":"Download Photos1","type":"main","index":0}]]},"Download Photos1":{"main":[[{"node":"Resize For AI1","type":"main","index":0}]]},"Resize For AI1":{"main":[[{"node":"Bill and charge Photo Validator","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Bill and charge Photo Validator","type":"ai_languageModel","index":0}]]},"Bill and charge Photo Validator":{"main":[[{"node":"Code","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Bill and charge Photo Validator","type":"ai_outputParser","index":0}]]}},"settings":{},"staticData":null,"meta":{"templateId":"2420","templateCredsSetupCompleted":true},"pinData":{},"versionId":"a2ce5115-66c1-4f5d-bf3a-9eddd3d0a95b","triggerCount":0,"tags":[]}
{"createdAt":"2025-01-25T02:14:21.937Z","updatedAt":"2025-01-26T17:05:14.109Z","id":"LynQ2GmWtCkGQs5N","name":"Save workflows everyday on Github PRODUCCION","active":true,"nodes":[{"parameters":{"options":{}},"id":"617ea82a-1e5e-4051-bd65-5d9391a9a136","name":"Set date","type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[280,200]},{"parameters":{"operation":"formatDate","date":"={{ $json.currentDate }}","format":"custom","customFormat":"dd-MM-yyyy/H:mm","options":{}},"id":"c938c8c1-e576-4646-95f7-2b99e253eb25","name":"Format date","type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[480,200]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"commitDate","value":"={{ $json.formattedDate }}"}]},"options":{}},"id":"f5d9025a-8cae-4508-bc09-73f93c567168","name":"Set commit date","type":"n8n-nodes-base.set","typeVersion":2,"position":[680,200]},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"value":"alexroderdev","mode":"name"},"repository":{"__rl":true,"value":"n8n_workflows","mode":"name"},"filePath":"=docs"},"id":"3774c38e-6e14-4f5a-9b7e-ef199fcc587a","name":"List files from repository [GITHUB]","type":"n8n-nodes-base.github","typeVersion":1,"position":[880,200],"alwaysOutputData":true,"credentials":{"githubApi":{"id":"v3iseuonNOSBuVoE","name":"GitHub account"}}},{"parameters":{"operation":"aggregateItems","fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"name"}]},"options":{}},"id":"1b076cee-1612-46ca-98d3-9917c14b6f5d","name":"Combine file names [GITHUB]","type":"n8n-nodes-base.itemLists","typeVersion":2.1,"position":[1080,200]},{"parameters":{"filters":{},"requestOptions":{}},"id":"7848a2b3-8026-40c8-865a-1ed850fa3f53","name":"Retrieve workflows [N8N]","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[1280,200],"credentials":{"n8nApi":{"id":"7Nx3lyXbeCHnN3pg","name":"n8n account"}}},{"parameters":{"mode":"jsonToBinary","options":{"fileName":"={{ $json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $json.id }}.json"}},"id":"afdef44f-660f-4877-be93-d2a519551ffb","name":"Move JSON to binary","type":"n8n-nodes-base.moveBinaryData","typeVersion":1,"position":[1480,200]},{"parameters":{"batchSize":1,"options":{}},"id":"dbdf9884-97da-4451-ac43-9d49714bc8af","name":"Split to single items","type":"n8n-nodes-base.splitInBatches","typeVersion":2,"position":[1880,200]},{"parameters":{"conditions":{"string":[{"value1":"={{ $node['Combine file names [GITHUB]'].json.name }}","operation":"contains","value2":"={{ $binary.data.fileName }}"}]}},"id":"9604811a-ed95-47f0-97c7-7eca8281ec94","name":"Check if file exists in repository","type":"n8n-nodes-base.if","typeVersion":1,"position":[2140,180]},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"value":"alexroderdev","mode":"list","cachedResultName":"alexroderdev","cachedResultUrl":"https://github.com/alexroderdev"},"repository":{"__rl":true,"value":"n8n_workflows","mode":"list","cachedResultName":"n8n_workflows","cachedResultUrl":"https://github.com/alexroderdev/n8n_workflows"},"filePath":"=docs/{{ $binary.data.fileName }}","binaryData":true,"commitMessage":"=backup-{{ $node['Set commit date'].json.commitDate }}"},"id":"e3a3fcea-5fbb-421d-9e08-4e759bdabc57","name":"Update file [GITHUB]","type":"n8n-nodes-base.github","typeVersion":1,"position":[2120,0],"credentials":{"githubApi":{"id":"v3iseuonNOSBuVoE","name":"GitHub account"}}},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"alexroderdev","mode":"list","cachedResultName":"alexroderdev","cachedResultUrl":"https://github.com/alexroderdev"},"repository":{"__rl":true,"value":"n8n_workflows","mode":"list","cachedResultName":"n8n_workflows","cachedResultUrl":"https://github.com/alexroderdev/n8n_workflows"},"filePath":"=docs/{{ $binary.data.fileName }}","binaryData":true,"commitMessage":"=backup-{{ $node['Set commit date'].json.commitDate }}","additionalParameters":{"committer":{"name":"AlexRoderDev","email":"alexroder94@gmail.com"}}},"id":"963beccd-a093-45f0-af63-4dae0c806c59","name":"Upload file [GITHUB]","type":"n8n-nodes-base.github","typeVersion":1,"position":[2380,200],"credentials":{"githubApi":{"id":"v3iseuonNOSBuVoE","name":"GitHub account"}}},{"parameters":{"content":"## Set and format date/time\nThose nodes are responsible for setting a current date and time in format `dd-MM-yyyy/H:mm`. Date and time are used to compose commit messages in GitHub, for example: `backup-12-07-2023/14:18`.","height":339.42690909090965,"width":585.4045090909088,"color":4},"id":"54fc51a8-df53-4258-9d00-cb9d03db7db8","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[240,40]},{"parameters":{"content":"## Make a list of existing files\nReturn a list of existing files (backups) in GitHub repository. Data returned by those nodes is used by \"IF\" node (later in workflow) to check whether the backup files should be created or updated.","height":339.42690909090965,"width":389.89265454545443},"id":"bf000ff8-1448-45b2-bce4-3f07e1170809","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[840,40]},{"parameters":{"content":"## Retrieve workflows\nGet all workflows form your n8n instance. Remember that **your credentials need to point to the instance that you want to backup.**","height":339.42690909090965,"width":384.14708363636373},"id":"f2c255c1-cdfb-4612-9931-85a9a1b86f87","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1260,40]},{"parameters":{"content":"## Upload backup\nSplit JSON files into batches of 1, check if they were uploaded to repository before. If yes (true), upload the new version of the file. Otherwise (false) create the file in repository.","height":731.633426614796,"width":1230.7937247293924,"color":5},"id":"22f671c7-6b95-4af0-b976-22ee54702e37","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1740,-220]},{"parameters":{"chatId":"792267610 ","text":"={{ $json.message }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[3160,540],"id":"961db3e8-159c-4acf-a659-5a7f78d509a2","name":"Telegram","credentials":{"telegramApi":{"id":"gaOHgbat0CO2TRi9","name":"Telegram account"}}},{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 0 * * *"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-40,200],"id":"b2a4b045-56da-428f-a098-b2c339d11a79","name":"Schedule Trigger"},{"parameters":{"jsCode":"// Ensure input is an array\nconst items = Array.isArray($input) ? $input : [$input];\nconst flatItems = items.flat(); // Flatten in case of nested arrays\n\nconst counters = {\n    totalFiles: flatItems.length,\n    newFiles: 0,\n    updatedFiles: 0,\n    errors: 0,\n    newFilesList: [],\n    updatedFilesList: []\n};\n\n// Count each type\nflatItems.forEach(item => {\n    if (item.error) {\n        counters.errors++;\n    } else if (item.isNew) {\n        counters.newFiles++;\n        counters.newFilesList.push(item.name || 'file');\n    } else {\n        counters.updatedFiles++;\n        counters.updatedFilesList.push(item.name || 'file');\n    }\n});\n\nconst message = `📊 Backup Summary:\n📁 Total files processed: ${counters.totalFiles}\n🆕 New files created: ${counters.newFiles}\n🔄 Files updated: ${counters.updatedFiles}\n❌ Errors found: ${counters.errors}`;\n\nreturn { message };"},"id":"5416c56a-7624-48ac-beb4-a8bbe06464e6","name":"Count success or failed","type":"n8n-nodes-base.code","typeVersion":2,"position":[2940,540]},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"84ecbb50-bee0-4500-bcfb-ad7fa9e044f7","name":"Merge","type":"n8n-nodes-base.merge","typeVersion":3,"position":[2720,540],"alwaysOutputData":true},{"parameters":{"jsCode":"// Simple counter for updates\nreturn {\n    type: 'update',\n    status: 'success'\n};"},"id":"706eedbc-4b56-46ac-8f46-a4c8aed3bf52","name":"Function (count update)","type":"n8n-nodes-base.code","typeVersion":2,"position":[2620,0]},{"parameters":{"jsCode":"// Simple counter for new files\nreturn {\n    type: 'new',\n    status: 'success'\n};"},"id":"16dd2aaf-ce30-4c0b-a231-ce248c334ec2","name":"Function (Upload file)","type":"n8n-nodes-base.code","typeVersion":2,"position":[2620,200]},{"parameters":{"jsCode":"// Initialize counter object\nconst singleMessage = {\n    totalProcessed: 0,\n    updates: 0,\n    newFiles: 0\n};\n\n// Ensure we have an array of items\nconst items = Array.isArray($input) ? $input : [$input];\n\n// Process all items\nitems.forEach(item => {\n    singleMessage.totalProcessed++;\n    if (item.type === 'update') {\n        singleMessage.updates++;\n    } else if (item.type === 'new') {\n        singleMessage.newFiles++;\n    }\n});\n\n// Return a single item array with one message\nreturn [{\n    json: {\n        message: `📊 Backup Summary:\n📁 Total files processed: ${singleMessage.totalProcessed}\n🆕 New files created: ${singleMessage.newFiles}\n🔄 Files updated: ${singleMessage.updates}`\n    }\n}];"},"id":"bc4729e8-027b-45f5-907a-94c8524d4d28","name":"Count success or failed1","type":"n8n-nodes-base.code","typeVersion":2,"position":[2960,100]},{"parameters":{"chatId":"792267610 ","text":"={{ $json.message }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[3220,100],"id":"85ebb994-ff22-4419-b628-5513d69f8506","name":"Telegram1","credentials":{"telegramApi":{"id":"gaOHgbat0CO2TRi9","name":"Telegram account"}}},{"parameters":{"options":{"reset":true}},"id":"0bfaed5b-f488-483b-a5e3-3d2a09715635","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[3320,300]},{"parameters":{},"id":"b0a230f9-1659-48bb-8eb3-cb7b1729f22d","name":"Replace Me","type":"n8n-nodes-base.noOp","typeVersion":1,"position":[3580,320]}],"connections":{"Set date":{"main":[[{"node":"Format date","type":"main","index":0}]]},"Format date":{"main":[[{"node":"Set commit date","type":"main","index":0}]]},"Set commit date":{"main":[[{"node":"List files from repository [GITHUB]","type":"main","index":0}]]},"List files from repository [GITHUB]":{"main":[[{"node":"Combine file names [GITHUB]","type":"main","index":0}]]},"Combine file names [GITHUB]":{"main":[[{"node":"Retrieve workflows [N8N]","type":"main","index":0}]]},"Retrieve workflows [N8N]":{"main":[[{"node":"Move JSON to binary","type":"main","index":0}]]},"Move JSON to binary":{"main":[[{"node":"Split to single items","type":"main","index":0}]]},"Split to single items":{"main":[[{"node":"Check if file exists in repository","type":"main","index":0}]]},"Check if file exists in repository":{"main":[[{"node":"Update file [GITHUB]","type":"main","index":0}],[{"node":"Upload file [GITHUB]","type":"main","index":0}]]},"Update file [GITHUB]":{"main":[[{"node":"Split to single items","type":"main","index":0},{"node":"Function (count update)","type":"main","index":0}]]},"Upload file [GITHUB]":{"main":[[{"node":"Split to single items","type":"main","index":0},{"node":"Function (Upload file)","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Set date","type":"main","index":0}]]},"Count success or failed":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Count success or failed","type":"main","index":0}]]},"Function (count update)":{"main":[[{"node":"Count success or failed1","type":"main","index":0}]]},"Function (Upload file)":{"main":[[{"node":"Count success or failed1","type":"main","index":0}]]},"Count success or failed1":{"main":[[{"node":"Telegram1","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Replace Me","type":"main","index":0}]]},"Replace Me":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f36675cd-b3fa-42b5-a807-979b20c737b9","triggerCount":1,"tags":[{"createdAt":"2024-11-27T05:11:34.741Z","updatedAt":"2024-11-27T05:11:34.741Z","id":"lkTQ85NNYkbxB1mk","name":"Prod"}]}